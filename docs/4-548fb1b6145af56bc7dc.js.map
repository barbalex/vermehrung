{"version":3,"sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/materialTheme.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Account.js","webpack:///./src/components/Header/More.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Tree/isNodeInActiveNodePath.js","webpack:///./src/components/Tree/isNodeOpen.js","webpack:///./src/components/Tree/toggleNode.js","webpack:///./src/components/Tree/openNode.js","webpack:///./src/components/Tree/Row.js","webpack:///./src/components/Tree/toggleNodeSymbol.js","webpack:///./src/components/Tree/sort.js","webpack:///./src/components/Tree/allParentNodesExist.js","webpack:///./src/components/Tree/nodes/compareLabel.js","webpack:///./src/components/Tree/nodes/index.js","webpack:///./src/components/Tree/nodes/art/artFolder.js","webpack:///./src/components/Tree/nodes/garten/gartenFolder.js","webpack:///./src/components/Tree/nodes/herkunft/herkunftFolder.js","webpack:///./src/components/Tree/nodes/lieferung/lieferungFolder.js","webpack:///./src/components/Tree/nodes/person/personFolder.js","webpack:///./src/components/Tree/nodes/werteListen/werteListenFolder.js","webpack:///./src/components/Tree/allParentNodesAreOpen.js","webpack:///./src/components/Tree/nodes/art/art.js","webpack:///./src/components/Tree/nodes/garten/garten.js","webpack:///./src/components/Tree/nodes/herkunft/herkunft.js","webpack:///./src/components/Tree/nodes/lieferung/lieferung.js","webpack:///./src/components/Tree/nodes/person/person.js","webpack:///./src/components/Tree/nodes/werteListen/masseinheitFolder.js","webpack:///./src/components/Tree/nodes/werteListen/zaehleinheitFolder.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungTypFolder.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungStatusFolder.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungZwischenlagerFolder.js","webpack:///./src/components/Tree/nodes/art/sammlung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/folder.js","webpack:///./src/components/Tree/nodes/werteListen/zaehleinheit.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungStatus.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungTyp.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungZwischenlager.js","webpack:///./src/components/Tree/nodes/werteListen/masseinheit.js","webpack:///./src/components/Tree/nodes/art/kultur/index.js","webpack:///./src/components/Tree/nodes/art/sammlung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/zaehlung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/ablieferung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/zulieferung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/event/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/inventar/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/zaehlung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/ablieferung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/zulieferung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/event/index.js","webpack:///./src/components/Tree/index.js","webpack:///./src/components/VermehrungCore.js","webpack:///./src/utils/activeNodeArrayFromPathname.js","webpack:///./src/utils/openNodesFromActiveNodeArray.js"],"names":["Container","styled","div","withConfig","displayName","componentId","ErrorTitle","ReloadButton","Button","ErrorBoundary","props","_this","_Component","call","this","state","error","getDerivedStateFromError","render","_this2","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","message","variant","onClick","window","location","reload","children","React","Children","map","child","cloneElement","Object","assign","Component","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_colors_purple__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_colors_purple__WEBPACK_IMPORTED_MODULE_1___default","theme","createMuiTheme","palette","primary","main","purple","typography","useNextVariants","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","IconContainer","UserNameDiv","observer","email","useContext","storeContext","_useState","useState","anchorEl","setAnchorEl","onClickMenu","useCallback","event","currentTarget","onCloseMenu","onClickSignup","onClickLogin","onClickLogout","react_default","Fragment","IconButton_default","aria-haspopup","aria-label","color","title","fa","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","MehrButton","onClickUserDocs","navigate","onClickTechDocs","onClickKontakt","onClickMehrButton","aria-owns","Boolean","SiteTitle","Typography","Spacer","NavButton","active","Header","onClickSiteTitle","styles","materialTheme","es","AppBar_default","position","Toolbar_default","noWrap","startsWith","component","Link","to","Header_Account","More","htmlStyle","overflow","Layout","gatsby_browser_entry","Helmet_default","site","siteMetadata","meta","name","content","lang","style","components_Header","_4130953669","isNodeInActiveNodePath","node","activeNodeArray","url","activeNodeArrayPartWithEqualLength","slice","length","isEqual","isNodeOpen","openNodes","some","toggleNode","store","_store$tree","tree","setActiveNodeArray","newActiveNodeArray","concat","nodeIsOpen","setOpenNodes","openNode","join","StyledNode","Number","StyledExpandMoreIcon","ExpandMoreIcon","StyledChevronRightIcon","ChevronRightIcon","StyledMoreHorizIcon","MoreHorizIcon","SymbolDiv","SymbolSpan","span","TextSpan","symbolIcon","index","myProps","key","nodeIsInActiveNodePath","useSymbolIcon","useSymbolSpan","hasChildren","label","dataUrl","JSON","stringify","level","onClickNode","onClickNodeSymbol","newOpenNodes","filter","push","toggleNodeSymbol","es6","menuType","collect","nodeId","nodeLabel","data-level","data-nodeisinactivenodepath","data-id","data-parentid","parentId","data-url","data-nodetype","nodeType","data-label","data-menutype","data-nodeisopen","exists","value","Tree_sort","b","sort","i","isNaN","aI","toString","bI","toLowerCase","allParentNodesExist","nodes","nodePassed","parentNodes","nodeUrl","pop","nodeUrls","every","compareLabel","compare","Tree_nodes","forEach","allParentNodesAreOpen","get","el","filterTable","buildArtArt","buildGartenGarten","buildHerkunftHerkunft","buildLieferungLieferung","buildPersonPerson","artNodes","artIndex","findIndex","buildArtSammlungFolder","buildArtKulturFolder","buildWLZaehleinheitZaehleinheit","buildWLLieferungStatusStatus","buildWLLieferungTypTyp","buildWLLieferungZwischenlagerZwischenlager","buildWLMasseinheitMasseinheit","art","find","kulturen","buildArtKultur","sammlungen","buildArtSammlung","artId","kulturId","kulturNodes","kulturIndex","buildArtKulturZaehlungFolder","buildArtKulturAbLieferungFolder","buildArtKulturZuLieferungFolder","buildArtKulturEventFolder","buildArtKulturInventarFolder","kultur","k","zaehlungen","buildArtKulturZaehlungZaehlung","ablieferungen","buildArtKulturLieferungAbLieferung","zulieferungen","buildArtKulturLieferungZuLieferung","events","buildArtKulturEventEvent","uniqBy","StyledList","List","dimensions","buildNodes","listRef","createRef","useEffect","current","scrollToItem","height","width","itemCount","itemSize","ref","_ref2","Tree_Row","StyledReflexContainer","ReflexContainer","pathnamePassed","split","e","decodeURIComponent","openNodesFromActiveNodeArray","VermehrungCore_Container","orientation","flex","propagateDimensions","renderOnResizeRate","renderOnResize","components_Tree","_246772213"],"mappings":"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","file":"4-548fb1b6145af56bc7dc.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Container = styled.div`\r\n  margin: 10px;\r\n`\r\nconst ErrorTitle = styled.div`\r\n  margin-bottom: 10px;\r\n`\r\nconst ReloadButton = styled(Button)`\r\n  margin-top: 10px !important;\r\n`\r\n\r\nclass ErrorBoundary extends Component {\r\n  static getDerivedStateFromError(error) {\r\n    // Catch errors in any components below and re-render with error message\r\n    return {\r\n      error,\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { error: null }\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    if (error) {\r\n      console.log('error:', error)\r\n      return (\r\n        <Container>\r\n          <ErrorTitle>\r\n            Oh je, es ist ein Fehler aufgetreten! Bericht:\r\n          </ErrorTitle>\r\n          <div>{error.message}</div>\r\n          <ReloadButton\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              typeof window !== 'undefined' && window.location.reload(false)\r\n            }}\r\n          >\r\n            Neu laden\r\n          </ReloadButton>\r\n        </Container>\r\n      )\r\n    }\r\n    const { children } = this.props\r\n    var childrenWithProps = React.Children.map(children, child =>\r\n      React.cloneElement(child, { ...this.props }),\r\n    )\r\n\r\n    // Normally, just render children\r\n    // and pass all props\r\n    return childrenWithProps\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport purple from '@material-ui/core/colors/purple'\r\n//import red from '@material-ui/core/colors/red'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: purple[900] },\r\n    /*error: {\r\n      main: red[800],\r\n    },*/\r\n  },\r\n  typography: { useNextVariants: true },\r\n})\r\n\r\nexport default theme\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useCallback, useContext } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport { FaUserCircle as UserIcon } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\n//import Signup from './Signup'\r\n//import Login from './Login'\r\nimport ErrorBoundary from '../ErrorBoundary'\r\nimport storeContext from '../../storeContext'\r\n\r\nconst IconContainer = styled.div`\r\n  position: relative;\r\n  padding-left: 10px;\r\n`\r\nconst UserNameDiv = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  font-size: 10px;\r\n  width: 60px;\r\n  left: 5px;\r\n  text-align: center;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* ensure cursor is not changed */\r\n  z-index: -1;\r\n`\r\n\r\nconst Account = () => {\r\n  const store = useContext(storeContext)\r\n  const { email /*, signupOpen, loginOpen*/ } = store\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const onClickMenu = useCallback(event => setAnchorEl(event.currentTarget), [])\r\n  const onCloseMenu = useCallback(() => setAnchorEl(null), [])\r\n  const onClickSignup = useCallback(() => {\r\n    setAnchorEl(null)\r\n    console.log('TODO')\r\n    // authState.setSignupOpen(!signupOpen)\r\n  }, [])\r\n  const onClickLogin = useCallback(() => {\r\n    setAnchorEl(null)\r\n    console.log('TODO')\r\n    // authState.setLoginOpen(!loginOpen)\r\n  }, [])\r\n  const onClickLogout = useCallback(() => {\r\n    setAnchorEl(null)\r\n    console.log('TODO')\r\n    // authState.logOut()\r\n  }, [])\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <>\r\n        <IconContainer>\r\n          <IconButton\r\n            aria-haspopup=\"true\"\r\n            aria-label=\"Konto\"\r\n            onClick={onClickMenu}\r\n            color=\"inherit\"\r\n            title=\"Konto\"\r\n          >\r\n            <UserIcon />\r\n          </IconButton>\r\n          <UserNameDiv>{email || ''}</UserNameDiv>\r\n        </IconContainer>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={!!anchorEl}\r\n          onClose={onCloseMenu}\r\n        >\r\n          {!email && <MenuItem onClick={onClickLogin}>Anmelden</MenuItem>}\r\n          {email && <MenuItem onClick={onClickLogout}>Abmelden</MenuItem>}\r\n          <MenuItem onClick={onClickSignup}>Konto erstellen</MenuItem>\r\n        </Menu>\r\n        {/*signupOpen && <Signup />*/}\r\n        {/*loginOpen && <Login />*/}\r\n      </>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport default observer(Account)\r\n","// @flow\r\nimport React, { useState, useCallback } from 'react'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Button from '@material-ui/core/Button'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { navigate } from 'gatsby'\r\n\r\nimport ErrorBoundary from '../ErrorBoundary'\r\n\r\nconst Container = styled.div`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`\r\nconst MehrButton = styled(Button)`\r\n  color: white !important;\r\n`\r\n\r\nconst MyAppBar = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const onClickUserDocs = useCallback(() => {\r\n    setAnchorEl(null)\r\n    navigate('/Benutzer-Dokumentation/')\r\n  })\r\n  const onClickTechDocs = useCallback(() => {\r\n    setAnchorEl(null)\r\n    navigate('/Technische-Dokumentation/')\r\n  })\r\n  const onClickKontakt = useCallback(() => {\r\n    setAnchorEl(null)\r\n    window.open('https://gabriel-software.ch/Kontakt')\r\n  })\r\n  const onClickMehrButton = useCallback(event =>\r\n    setAnchorEl(event.currentTarget),\r\n  )\r\n  const onClose = useCallback(() => setAnchorEl(null))\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Container>\r\n        <MehrButton\r\n          aria-label=\"Mehr\"\r\n          aria-owns={anchorEl ? 'long-menu' : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={onClickMehrButton}\r\n        >\r\n          Mehr\r\n        </MehrButton>\r\n        <Menu\r\n          id=\"long-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={onClose}\r\n        >\r\n          <MenuItem onClick={onClickUserDocs}>Benutzer-Dokumentation</MenuItem>\r\n          <MenuItem onClick={onClickTechDocs}>\r\n            Technische Dokumentation\r\n          </MenuItem>\r\n          <MenuItem onClick={onClickKontakt}>Kontakt</MenuItem>\r\n        </Menu>\r\n      </Container>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport default observer(MyAppBar)\r\n","import React, { useCallback } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport styled from 'styled-components'\r\nimport { Link, navigate } from 'gatsby'\r\nimport { Location } from '@reach/router'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\nimport Account from './Account'\r\nimport More from './More'\r\nimport ErrorBoundary from '../ErrorBoundary'\r\nimport materialTheme from '../../utils/materialTheme'\r\n\r\nconst SiteTitle = styled(Typography)`\r\n  display: none;\r\n  cursor: pointer;\r\n  @media (min-width: 700px) {\r\n    display: block;\r\n  }\r\n`\r\nconst Spacer = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst NavButton = styled(Button)`\r\n  color: white !important;\r\n  border-color: rgba(255, 255, 255, 0.5) !important;\r\n  font-weight: ${props => (props.active ? '700' : '500')};\r\n`\r\n\r\nconst Header = () => {\r\n  const onClickSiteTitle = useCallback(() => navigate('/'))\r\n\r\n  return (\r\n    <MuiThemeProvider theme={materialTheme}>\r\n      <Location>\r\n        {({ location }) => {\r\n          const { pathname } = location\r\n\r\n          return (\r\n            <ErrorBoundary>\r\n              <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                  <SiteTitle\r\n                    variant=\"h6\"\r\n                    color=\"inherit\"\r\n                    noWrap\r\n                    title=\"Home\"\r\n                    onClick={onClickSiteTitle}\r\n                  >\r\n                    Vermehrung\r\n                  </SiteTitle>\r\n                  <Spacer />\r\n                  {!pathname.startsWith('/Vermehrung') && (\r\n                    <NavButton\r\n                      variant=\"text\"\r\n                      component={Link}\r\n                      to=\"/Vermehrung/\"\r\n                      active={pathname === '/Vermehrung/' ? 1 : 0}\r\n                    >\r\n                      Zu den Daten\r\n                    </NavButton>\r\n                  )}\r\n                  <Account />\r\n                  <More />\r\n                </Toolbar>\r\n              </AppBar>\r\n            </ErrorBoundary>\r\n          )\r\n        }}\r\n      </Location>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Cant move Helmet to App\r\n * because neither StaticQuery nor AppQuery\r\n * work there :-(\r\n */\r\nimport React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './Header'\r\n\r\nconst query = graphql`\r\n  query SiteTitleQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\nconst htmlStyle = {\r\n  overflow: 'hidden',\r\n}\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={query}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            {\r\n              name: 'description',\r\n              content: 'Bedrohte Pflanzenarten vermehren',\r\n            },\r\n            {\r\n              name: 'keywords',\r\n              content: 'Naturschutz, Artenschutz, Flora, Pflanzen, Vermehrung',\r\n            },\r\n          ]}\r\n        >\r\n          <html lang=\"de\" style={htmlStyle} />\r\n        </Helmet>\r\n        <Header />\r\n        {children}\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default Layout\r\n","import isEqual from 'lodash/isEqual'\r\n\r\nexport default (node, activeNodeArray) => {\r\n  if (!node) return false\r\n  if (!node.url) return false\r\n  if (!activeNodeArray) return false\r\n  const activeNodeArrayPartWithEqualLength = activeNodeArray.slice(\r\n    0,\r\n    node.url.length,\r\n  )\r\n  return isEqual(activeNodeArrayPartWithEqualLength, node.url)\r\n}\r\n","import isEqual from 'lodash/isEqual'\r\n\r\nexport default (openNodes, url) => {\r\n  if (!url) return false\r\n  if (!openNodes) return false\r\n  if (!openNodes.some) return false\r\n\r\n  return openNodes.some(n => isEqual(n, url))\r\n}\r\n","import { navigate } from '@reach/router'\r\n\r\nimport isNodeOpen from './isNodeOpen'\r\nimport isNodeInActiveNodePath from './isNodeInActiveNodePath'\r\nimport openNode from './openNode'\r\n\r\nexport default ({ node, store }) => {\r\n  if (!node.url) throw new Error('passed node has no url')\r\n  const { openNodes, activeNodeArray, setActiveNodeArray } = store.tree\r\n\r\n  const newActiveNodeArray = [...node.url]\r\n  const nodeIsOpen = isNodeOpen(openNodes, node.url)\r\n  if (nodeIsOpen && isNodeInActiveNodePath(node, activeNodeArray)) {\r\n    // need to check if node is last in activeNodePath\r\n    if (node.url.length === activeNodeArray.length) {\r\n      /**\r\n       * dont do anything:\r\n       * klicked node should always be / remain active\r\n       */\r\n    } else {\r\n      // leave newActiveNodeArray as it is\r\n    }\r\n  } else if (!nodeIsOpen) {\r\n    openNode({ node, openNodes, store })\r\n  }\r\n\r\n  setActiveNodeArray(newActiveNodeArray)\r\n  navigate(`/Vermehrung/${node.url.join('/')}`)\r\n}\r\n","import isNodeOpen from './isNodeOpen'\r\n\r\nexport default ({ node, openNodes, store }) => {\r\n  const { setOpenNodes } = store.tree\r\n  // make sure this node's url is not yet contained\r\n  // otherwise same nodes will be added multiple times!\r\n  if (isNodeOpen(openNodes, node.url)) return\r\n\r\n  let newOpenNodes = [...openNodes, node.url]\r\n  setOpenNodes(newOpenNodes)\r\n}\r\n","import React, { useContext, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ContextMenuTrigger } from 'react-contextmenu'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nimport isNodeInActiveNodePath from './isNodeInActiveNodePath'\r\nimport isNodeOpen from './isNodeOpen'\r\nimport toggleNode from './toggleNode'\r\nimport toggleNodeSymbol from './toggleNodeSymbol'\r\nimport storeContext from '../../storeContext'\r\n\r\nconst singleRowHeight = 23\r\nconst StyledNode = styled.div`\r\n  padding-left: ${props => `${Number(props['data-level']) * 17 - 10}px`};\r\n  height: ${singleRowHeight}px;\r\n  max-height: ${singleRowHeight}px;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  color: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '#D84315' : 'inherit'};\r\n`\r\nconst StyledExpandMoreIcon = styled(ExpandMoreIcon)`\r\n  margin-top: ${props =>\r\n    props['data-nodeisopen'] ? '-6px !important' : '1px !important'};\r\n  margin-left: ${props => (props['data-nodeisopen'] ? '-1px !important' : 0)};\r\n  margin-right: ${props => (props['data-nodeisopen'] ? '-5px !important' : 0)};\r\n  padding-left: ${props => (props['data-nodeisopen'] ? '2px' : '2px')};\r\n  height: ${props =>\r\n    props['data-nodeisopen'] ? '30px !important' : '22px !important'};\r\n  width: ${props =>\r\n    props['data-nodeisopen'] ? '30px !important' : '26px !important'};\r\n  color: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '#D84315 !important' : 'inherit'};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #f57c00 !important;\r\n  }\r\n`\r\nconst StyledChevronRightIcon = styled(ChevronRightIcon)`\r\n  margin-top: -2px !important;\r\n  padding-left: 2px;\r\n  height: 22px !important;\r\n  width: 26px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #f57c00 !important;\r\n  }\r\n`\r\nconst StyledMoreHorizIcon = styled(MoreHorizIcon)`\r\n  margin-top: ${props =>\r\n    props['data-nodeisinactivenodepath']\r\n      ? '-5px !important'\r\n      : '-2px !important'};\r\n  padding-left: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '1px' : '2px'};\r\n  height: ${props =>\r\n    props['data-nodeisinactivenodepath']\r\n      ? '26px !important'\r\n      : '22px !important'};\r\n  color: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '#D84315 !important' : 'inherit'};\r\n  width: 26px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #f57c00 !important;\r\n  }\r\n`\r\nconst SymbolDiv = styled.div`\r\n  cursor: pointer;\r\n`\r\nconst SymbolSpan = styled.span`\r\n  padding-right: 8px !important;\r\n  padding-left: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '7px' : '9px'};\r\n  font-weight: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '900 !important' : 'inherit'};\r\n  margin-top: -9px !important;\r\n  font-size: 28px !important;\r\n  width: 9px;\r\n`\r\nconst TextSpan = styled.span`\r\n  margin-left: 0;\r\n  font-size: 16px !important;\r\n  font-weight: ${props =>\r\n    props['data-nodeisinactivenodepath'] ? '900 !important' : 'inherit'};\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow-x: hidden !important;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #f57c00;\r\n  }\r\n`\r\n\r\nconst Row = ({ index, style, node }) => {\r\n  const store = useContext(storeContext)\r\n  const { tree } = store\r\n  const { openNodes, activeNodeArray } = tree\r\n\r\n  const myProps = { key: index }\r\n  const nodeIsInActiveNodePath = isNodeInActiveNodePath(node, activeNodeArray)\r\n  const nodeIsOpen = isNodeOpen(openNodes, node.url)\r\n  // build symbols\r\n  let useSymbolIcon = true\r\n  let useSymbolSpan = false\r\n  let symbolIcon\r\n  if (node.hasChildren && nodeIsOpen) {\r\n    symbolIcon = 'expandMore'\r\n  } else if (node.hasChildren) {\r\n    symbolIcon = 'chevronRight'\r\n  } else if (node.label === 'lade Daten...') {\r\n    symbolIcon = 'moreHoriz'\r\n  } else {\r\n    useSymbolSpan = true\r\n    useSymbolIcon = false\r\n  }\r\n  const dataUrl = JSON.stringify(node.url)\r\n  const level =\r\n    node.url[0] === 'Projekte' ? node.url.length - 1 : node.url.length\r\n\r\n  const onClickNode = useCallback(() => {\r\n    toggleNode({\r\n      node,\r\n      activeNodeArray,\r\n      store,\r\n    })\r\n  }, [node, openNodes, activeNodeArray])\r\n  const onClickNodeSymbol = useCallback(() => {\r\n    toggleNodeSymbol({ node, store })\r\n  }, [node, openNodes])\r\n\r\n  return (\r\n    <div style={style}>\r\n      <ContextMenuTrigger\r\n        id={node.menuType}\r\n        collect={() => myProps}\r\n        nodeId={node.id}\r\n        nodeLabel={node.label}\r\n        key={`${node.menuType}${node.id}`}\r\n      >\r\n        <StyledNode\r\n          data-level={level}\r\n          data-nodeisinactivenodepath={nodeIsInActiveNodePath}\r\n          data-id={node.id}\r\n          data-parentid={node.parentId}\r\n          data-url={dataUrl}\r\n          data-nodetype={node.nodeType}\r\n          data-label={node.label}\r\n          data-menutype={node.menuType}\r\n        >\r\n          {useSymbolIcon && (\r\n            <SymbolDiv onClick={onClickNodeSymbol}>\r\n              {symbolIcon === 'expandMore' && (\r\n                <StyledExpandMoreIcon\r\n                  data-nodeisinactivenodepath={nodeIsInActiveNodePath}\r\n                  data-nodeisopen={nodeIsOpen}\r\n                />\r\n              )}\r\n              {symbolIcon === 'chevronRight' && <StyledChevronRightIcon />}\r\n              {symbolIcon === 'moreHoriz' && (\r\n                <StyledMoreHorizIcon\r\n                  data-nodeisinactivenodepath={nodeIsInActiveNodePath}\r\n                />\r\n              )}\r\n            </SymbolDiv>\r\n          )}\r\n          {useSymbolSpan && (\r\n            <SymbolSpan data-nodeisinactivenodepath={nodeIsInActiveNodePath}>\r\n              {'-'}\r\n            </SymbolSpan>\r\n          )}\r\n          <TextSpan\r\n            data-nodeisinactivenodepath={nodeIsInActiveNodePath}\r\n            node={node}\r\n            onClick={onClickNode}\r\n          >\r\n            {node.label}\r\n          </TextSpan>\r\n        </StyledNode>\r\n      </ContextMenuTrigger>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Row)\r\n","import isEqual from 'lodash/isEqual'\r\n\r\nimport isNodeOpen from './isNodeOpen'\r\n\r\nexport default ({ node, store }) => {\r\n  if (!node.url) throw new Error('passed node has no url')\r\n  const { setOpenNodes, openNodes } = store.tree\r\n\r\n  let newOpenNodes = [...openNodes]\r\n  if (isNodeOpen(openNodes, node.url)) {\r\n    newOpenNodes = newOpenNodes.filter(n => !isEqual(n, node.url))\r\n  } else {\r\n    newOpenNodes.push(node.url)\r\n  }\r\n  setOpenNodes(newOpenNodes)\r\n}\r\n","const exists = value => !!value || value === 0\r\n\r\nconst sort = (a, b, i) => {\r\n  // return if no element at this index\r\n  if (!exists(a[i]) && !exists(b[i])) return 0\r\n  // sort array with no more element at this position first\r\n  if (!exists(a[i]) && exists(b[i])) return -1\r\n  if (exists(a[i]) && !exists(b[i])) return 1\r\n  // sort numbers by value\r\n  if (!isNaN(a[i]) && !isNaN(b[i])) {\r\n    if (a[i] === b[i]) return sort(a, b, i + 1)\r\n    return a - b\r\n  }\r\n  // use string value to compare mixed types\r\n  const aI = isNaN(a[i]) ? a[i] : a[i].toString()\r\n  const bI = isNaN(b[i]) ? b[i] : b[i].toString()\r\n  if (aI.toLowerCase() === bI.toLowerCase()) return sort(a, b, i + 1)\r\n  if (aI.toLowerCase() < bI.toLowerCase()) return -1\r\n  if (aI.toLowerCase() > bI.toLowerCase()) return 1\r\n}\r\n\r\nexport default (a, b) => sort(a, b, 0)\r\n","import isEqual from 'lodash/isEqual'\r\n\r\nexport default (nodes, nodePassed) => {\r\n  let parentNodes = []\r\n  const nodeUrl = [...nodePassed.url]\r\n  // pop own url - check only for parents\r\n  nodeUrl.pop()\r\n  for (let i = 1; i < nodeUrl.length; i++) {\r\n    parentNodes.push(nodeUrl.slice(0, i))\r\n  }\r\n  // remove 'Projekte' as that is not contained in openNodes\r\n  parentNodes = parentNodes.filter(\r\n    n => !(n.length === 1 && n[0] === 'Projekte'),\r\n  )\r\n  if (parentNodes.length === 0) return true\r\n\r\n  const nodeUrls = nodes.map(n => n.url)\r\n  return parentNodes.every(n => nodeUrls.some(url => isEqual(url, n)))\r\n}\r\n","export default (a, b) => {\r\n  if (a.label.toLowerCase() < b.label.toLowerCase()) {\r\n    return -1\r\n  } else if (a.label.toLowerCase() > b.label.toLowerCase()) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n","import uniqBy from 'lodash/uniqBy'\r\n//import get from 'lodash/get'\r\n\r\nimport sort from '../sort'\r\nimport allParentNodesExist from '../allParentNodesExist'\r\nimport allParentNodesAreOpen from '../allParentNodesAreOpen'\r\nimport buildArtFolder from './art/artFolder'\r\nimport buildArtArt from './art/art'\r\nimport buildArtSammlungFolder from './art/sammlung/folder'\r\nimport buildArtSammlung from './art/sammlung'\r\nimport buildArtKulturFolder from './art/kultur/folder'\r\nimport buildArtKultur from './art/kultur'\r\nimport buildArtKulturEventFolder from './art/kultur/event/folder'\r\nimport buildArtKulturEventEvent from './art/kultur/event'\r\nimport buildArtKulturZaehlungFolder from './art/kultur/zaehlung/folder'\r\nimport buildArtKulturZaehlungZaehlung from './art/kultur/zaehlung'\r\nimport buildArtKulturInventarFolder from './art/kultur/inventar/folder'\r\nimport buildArtKulturAbLieferungFolder from './art/kultur/ablieferung/folder'\r\nimport buildArtKulturLieferungAbLieferung from './art/kultur/ablieferung'\r\nimport buildArtKulturZuLieferungFolder from './art/kultur/zulieferung/folder'\r\nimport buildArtKulturLieferungZuLieferung from './art/kultur/zulieferung'\r\nimport buildGartenFolder from './garten/gartenFolder'\r\nimport buildGartenGarten from './garten/garten'\r\nimport buildHerkunftFolder from './herkunft/herkunftFolder'\r\nimport buildHerkunftHerkunft from './herkunft/herkunft'\r\nimport buildLieferungFolder from './lieferung/lieferungFolder'\r\nimport buildLieferungLieferung from './lieferung/lieferung'\r\nimport buildPersonFolder from './person/personFolder'\r\nimport buildPersonPerson from './person/person'\r\nimport buildWerteListenFolder from './werteListen/werteListenFolder'\r\nimport buildWLMasseinheitFolder from './werteListen/masseinheitFolder'\r\nimport buildWLMasseinheitMasseinheit from './werteListen/masseinheit'\r\nimport buildWLZaehleinheitFolder from './werteListen/zaehleinheitFolder'\r\nimport buildWLZaehleinheitZaehleinheit from './werteListen/zaehleinheit'\r\nimport buildWLLieferungTypFolder from './werteListen/lieferungTypFolder'\r\nimport buildWLLieferungTypTyp from './werteListen/lieferungTyp'\r\nimport buildWLLieferungStatusFolder from './werteListen/lieferungStatusFolder'\r\nimport buildWLLieferungStatusStatus from './werteListen/lieferungStatus'\r\nimport buildWLLieferungZwischenlagerFolder from './werteListen/lieferungZwischenlagerFolder'\r\nimport buildWLLieferungZwischenlagerZwischenlager from './werteListen/lieferungZwischenlager'\r\n\r\nconst compare = (a, b) => {\r\n  // sort a before, if it has no value at this index\r\n  if (a !== 0 && !a) return -1\r\n  // sort a after if b has no value at this index\r\n  if (b !== 0 && !b) return 1\r\n  // sort a before if its value is smaller\r\n  return a - b\r\n}\r\n\r\nexport default ({ store, data }) => {\r\n  const openNodes = store.tree.openNodes.sort(sort)\r\n\r\n  let nodes = [\r\n    ...buildArtFolder(),\r\n    ...buildGartenFolder(),\r\n    ...buildHerkunftFolder(),\r\n    ...buildLieferungFolder(),\r\n    ...buildPersonFolder(),\r\n    ...buildWerteListenFolder(),\r\n  ]\r\n\r\n  /**\r\n   * We ALWAYS add an array of nodes,\r\n   * never a single one\r\n   * not even for folders that are never more than one\r\n   * because the function adding the nodes\r\n   * should be able to pass none as well\r\n   * for instance if a parent node is not open\r\n   * or some filter is active\r\n   */\r\n  openNodes.forEach(url => {\r\n    if (!allParentNodesAreOpen(openNodes, url)) return\r\n    if (url.length === 1 && url[0] === 'Arten') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtArt({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (url.length === 1 && url[0] === 'Gaerten') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildGartenGarten({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (url.length === 1 && url[0] === 'Herkuenfte') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildHerkunftHerkunft({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (url.length === 1 && url[0] === 'Lieferungen') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildLieferungLieferung({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (url.length === 1 && url[0] === 'Personen') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildPersonPerson({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (url.length === 1 && url[0] === 'Werte-Listen') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildWLMasseinheitFolder({\r\n          nodes,\r\n          data,\r\n        }),\r\n        ...buildWLZaehleinheitFolder({\r\n          nodes,\r\n          data,\r\n        }),\r\n        ...buildWLLieferungTypFolder({\r\n          nodes,\r\n          data,\r\n        }),\r\n        ...buildWLLieferungStatusFolder({\r\n          nodes,\r\n          data,\r\n        }),\r\n        ...buildWLLieferungZwischenlagerFolder({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n\r\n    if (url.length === 2 && url[0] === 'Arten') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtSammlungFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n        ...buildArtKulturFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n\r\n    if (\r\n      url.length === 2 &&\r\n      url[0] === 'Werte-Listen' &&\r\n      url[1] === 'Zaehleinheiten'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildWLZaehleinheitZaehleinheit({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 2 &&\r\n      url[0] === 'Werte-Listen' &&\r\n      url[1] === 'Lieferung-Status'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildWLLieferungStatusStatus({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 2 &&\r\n      url[0] === 'Werte-Listen' &&\r\n      url[1] === 'Lieferung-Typ'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildWLLieferungTypTyp({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 2 &&\r\n      url[0] === 'Werte-Listen' &&\r\n      url[1] === 'Lieferung-Zwischenlager'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildWLLieferungZwischenlagerZwischenlager({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 2 &&\r\n      url[0] === 'Werte-Listen' &&\r\n      url[1] === 'Masseinheiten'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildWLMasseinheitMasseinheit({\r\n          nodes,\r\n          data,\r\n        }),\r\n      ]\r\n    }\r\n\r\n    if (url.length === 3 && url[0] === 'Arten' && url[2] === 'Kulturen') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtKultur({\r\n          nodes,\r\n          data,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n    if (url.length === 3 && url[0] === 'Arten' && url[2] === 'Sammlungen') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtSammlung({\r\n          nodes,\r\n          data,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n\r\n    if (url.length === 4 && url[0] === 'Arten' && url[2] === 'Kulturen') {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtKulturZaehlungFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n        ...buildArtKulturAbLieferungFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n        ...buildArtKulturZuLieferungFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n        ...buildArtKulturEventFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n        ...buildArtKulturInventarFolder({\r\n          nodes,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n\r\n    if (\r\n      url.length === 5 &&\r\n      url[0] === 'Arten' &&\r\n      url[2] === 'Kulturen' &&\r\n      url[4] === 'Zaehlungen'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtKulturZaehlungZaehlung({\r\n          nodes,\r\n          data,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 5 &&\r\n      url[0] === 'Arten' &&\r\n      url[2] === 'Kulturen' &&\r\n      url[4] === 'Ab-Lieferungen'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtKulturLieferungAbLieferung({\r\n          nodes,\r\n          data,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 5 &&\r\n      url[0] === 'Arten' &&\r\n      url[2] === 'Kulturen' &&\r\n      url[4] === 'Zu-Lieferungen'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtKulturLieferungZuLieferung({\r\n          nodes,\r\n          data,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n    if (\r\n      url.length === 5 &&\r\n      url[0] === 'Arten' &&\r\n      url[2] === 'Kulturen' &&\r\n      url[4] === 'Events'\r\n    ) {\r\n      nodes = [\r\n        ...nodes,\r\n        ...buildArtKulturEventEvent({\r\n          nodes,\r\n          data,\r\n          url,\r\n        }),\r\n      ]\r\n    }\r\n  })\r\n\r\n  nodes = nodes.filter(n => allParentNodesExist(nodes, n))\r\n  /**\r\n   * There is something weird happening when filtering data\r\n   * that leads to duplicate nodes\r\n   * Need to solve that but in the meantime use uniqBy\r\n   */\r\n  nodes = uniqBy(nodes, n => n.url.join())\r\n\r\n  /**\r\n   * As all nodes are now in one flat list,\r\n   * we need to sort them\r\n   *\r\n   * This is the sorting algorithm:\r\n   *\r\n   * compare the sort array value in the nodes\r\n   * to determine sorting\r\n   *\r\n   * compare arrays element by element, starting with first\r\n   * if a has no value at this index (> a is folder), sort a before b\r\n   * if b has no value at this index (> b is folder), sort a after b\r\n   * if a is smaller than b, sort a before b\r\n   * if both array elements at this index are same,\r\n   * compare values at next index\r\n   *\r\n   * see: stackoverflow.com/questions/13211709/javascript-sort-array-by-multiple-number-fields\r\n   */\r\n  return nodes.sort(\r\n    (a, b) =>\r\n      compare(a.sort[0], b.sort[0]) ||\r\n      compare(a.sort[1], b.sort[1]) ||\r\n      compare(a.sort[2], b.sort[2]) ||\r\n      compare(a.sort[3], b.sort[3]) ||\r\n      compare(a.sort[4], b.sort[4]) ||\r\n      compare(a.sort[5], b.sort[5]) ||\r\n      compare(a.sort[6], b.sort[6]) ||\r\n      compare(a.sort[7], b.sort[7]) ||\r\n      compare(a.sort[8], b.sort[8]) ||\r\n      compare(a.sort[9], b.sort[9]) ||\r\n      compare(a.sort[10], b.sort[10]),\r\n  )\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artFolder',\r\n      id: 'artFolder',\r\n      label: 'Arten',\r\n      url: ['Arten'],\r\n      sort: [1],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'gartenFolder',\r\n      id: 'gartenFolder',\r\n      label: 'Gärten',\r\n      url: ['Gaerten'],\r\n      sort: [2],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'herkunftFolder',\r\n      id: 'herkunftFolder',\r\n      label: 'Herkünfte',\r\n      url: ['Herkuenfte'],\r\n      sort: [3],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'lieferungFolder',\r\n      id: 'lieferungFolder',\r\n      label: 'Lieferungen',\r\n      url: ['Lieferungen'],\r\n      sort: [4],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'personFolder',\r\n      id: 'personFolder',\r\n      label: 'Personen',\r\n      url: ['Personen'],\r\n      sort: [5],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'werteListenFolder',\r\n      id: 'werteListenFolder',\r\n      label: 'Werte-Listen',\r\n      url: ['Werte-Listen'],\r\n      sort: [6],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import isNodeOpen from './isNodeOpen'\r\n\r\nexport default (openNodes, nodePassed) => {\r\n  let parentNodes = []\r\n  const node = [...nodePassed]\r\n  for (let i = 1; i < node.length; i++) {\r\n    parentNodes.push(node.slice(0, i))\r\n  }\r\n  // remove 'Projekte' as that is not contained in openNodes\r\n  parentNodes = parentNodes.filter(\r\n    n => !(n.length === 1 && n[0] === 'Projekte'),\r\n  )\r\n  if (parentNodes.length === 0) return true\r\n  return parentNodes.every(n => isNodeOpen(openNodes, n))\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n\r\n  return arten\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'art',\r\n      filterTable: 'art',\r\n      id: `art${el.id}`,\r\n      parentId: 'artFolder',\r\n      label: get(el, 'name', '(keine Art gewählt)'),\r\n      url: ['Arten', el.id],\r\n      hasChildren: true,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const gaerten = get(data, 'hasura.garten', [])\r\n\r\n  return gaerten\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'garten',\r\n      filterTable: 'garten',\r\n      id: `garten${el.id}`,\r\n      parentId: 'gartenFolder',\r\n      label: get(el, 'personBypersonId.name', '(kein Garten gewählt)'),\r\n      url: ['Gaerten', el.id],\r\n      hasChildren: true,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [2, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const herkuenfte = get(data, 'hasura.herkunft', [])\r\n\r\n  return (\r\n    herkuenfte\r\n      .map(el => ({\r\n        nodeType: 'table',\r\n        menuType: 'herkunft',\r\n        filterTable: 'herkunft',\r\n        id: `herkunft${el.id}`,\r\n        parentId: 'herkunftFolder',\r\n        label: get(el, 'lokalname', '(keine Herkunft gewählt)'),\r\n        url: ['Herkuenfte', el.id],\r\n        hasChildren: true,\r\n      }))\r\n      .filter(n => allParentNodesExist(nodes, n))\r\n      // sort by label\r\n      .sort(compareLabel)\r\n      .map((el, index) => {\r\n        el.sort = [3, index]\r\n        return el\r\n      })\r\n  )\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const lieferungen = get(data, 'hasura.lieferung', [])\r\n\r\n  return (\r\n    lieferungen\r\n      .map(el => ({\r\n        nodeType: 'table',\r\n        menuType: 'lieferung',\r\n        filterTable: 'lieferung',\r\n        id: `lieferung${el.id}`,\r\n        parentId: 'lieferungFolder',\r\n        label: `${get(el, 'von_datum', '(kein von-Datum)')}: ${get(\r\n          el,\r\n          'personBypersonId.name',\r\n          '(keine Person)',\r\n        )}`,\r\n        url: ['Lieferungen', el.id],\r\n        hasChildren: true,\r\n      }))\r\n      .filter(n => allParentNodesExist(nodes, n))\r\n      // sort by label\r\n      .sort(compareLabel)\r\n      .map((el, index) => {\r\n        el.sort = [4, index]\r\n        return el\r\n      })\r\n  )\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const personen = get(data, 'hasura.person', [])\r\n\r\n  return personen\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'person',\r\n      filterTable: 'person',\r\n      id: `person${el.id}`,\r\n      parentId: 'personFolder',\r\n      label: get(el, 'name', '(kein Name)'),\r\n      url: ['Personen', el.id],\r\n      hasChildren: true,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [5, index]\r\n      return el\r\n    })\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'masseinheitenFolder',\r\n      id: 'masseinheitenFolder',\r\n      parentId: 'werteListenFolder',\r\n      label: 'Masseinheiten',\r\n      url: ['Werte-Listen', 'Masseinheiten'],\r\n      sort: [6, 1],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'zaehleinheitenFolder',\r\n      id: 'zaehleinheitenFolder',\r\n      parentId: 'werteListenFolder',\r\n      label: 'Zähleinheiten',\r\n      url: ['Werte-Listen', 'Zaehleinheiten'],\r\n      sort: [6, 2],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'lieferungTypFolder',\r\n      id: 'lieferungTypFolder',\r\n      parentId: 'werteListenFolder',\r\n      label: 'Lieferung: Typ',\r\n      url: ['Werte-Listen', 'Lieferung-Typ'],\r\n      sort: [6, 3],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'lieferungStatusFolder',\r\n      id: 'lieferungStatusFolder',\r\n      parentId: 'werteListenFolder',\r\n      label: 'Lieferung: Status',\r\n      url: ['Werte-Listen', 'Lieferung-Status'],\r\n      sort: [6, 4],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","export default () => {\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'lieferungZwischenlagerFolder',\r\n      id: 'lieferungZwischenlagerFolder',\r\n      parentId: 'werteListenFolder',\r\n      label: 'Lieferung: Zwischenlager',\r\n      url: ['Werte-Listen', 'Lieferung-Zwischenlager'],\r\n      sort: [6, 5],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artSammlungenFolder',\r\n      id: `art${url[1]}SammlungenFolder`,\r\n      label: 'Sammlungen',\r\n      url: ['Arten', url[1], 'Sammlungen'],\r\n      sort: [1, artIndex, 2],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artKulturenFolder',\r\n      id: `art${url[1]}KulturFolder`,\r\n      label: 'Kulturen',\r\n      url: ['Arten', url[1], 'Kulturen'],\r\n      sort: [1, artIndex, 1],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const werte = get(data, 'hasura.zaehleinheit_werte', [])\r\n\r\n  return werte\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'zaehleinheit_werte',\r\n      filterTable: 'zaehleinheit_werte',\r\n      id: `zaehleinheit${el.id}`,\r\n      parentId: 'zaehleinheitenFolder',\r\n      label: get(el, 'wert', '(kein Wert)'),\r\n      url: ['Werte-Listen', 'Zaehleinheiten', el.id],\r\n      hasChildren: false,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [6, 2, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const werte = get(data, 'hasura.lieferung_status_werte', [])\r\n\r\n  return werte\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'lieferung_status_werte',\r\n      filterTable: 'lieferung_status_werte',\r\n      id: `lieferungStatus${el.id}`,\r\n      parentId: 'lieferungStatusFolder',\r\n      label: get(el, 'wert', '(kein Wert)'),\r\n      url: ['Werte-Listen', 'Lieferung-Status', el.id],\r\n      hasChildren: false,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [6, 4, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const werte = get(data, 'hasura.lieferung_typ_werte', [])\r\n\r\n  return werte\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'lieferung_typ_werte',\r\n      filterTable: 'lieferung_typ_werte',\r\n      id: `lieferungTyp${el.id}`,\r\n      parentId: 'lieferungTypFolder',\r\n      label: get(el, 'wert', '(kein Wert)'),\r\n      url: ['Werte-Listen', 'Lieferung-Typ', el.id],\r\n      hasChildren: false,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [6, 3, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const werte = get(data, 'hasura.lieferung_zwischenlager_werte', [])\r\n\r\n  return werte\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'lieferung_zwischenlager_werte',\r\n      filterTable: 'lieferung_zwischenlager_werte',\r\n      id: `lieferungZwischenlager${el.id}`,\r\n      parentId: 'lieferungZwischenlagerFolder',\r\n      label: get(el, 'wert', '(kein Wert)'),\r\n      url: ['Werte-Listen', 'Lieferung-Zwischenlager', el.id],\r\n      hasChildren: false,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [6, 5, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\n\r\nimport compareLabel from '../compareLabel'\r\nimport allParentNodesExist from '../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data }) => {\r\n  const werte = get(data, 'hasura.masseinheit_werte', [])\r\n\r\n  return werte\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'masseinheit_werte',\r\n      filterTable: 'masseinheit_werte',\r\n      id: `masseinheit${el.id}`,\r\n      parentId: 'masseinheitenFolder',\r\n      label: get(el, 'wert', '(kein Wert)'),\r\n      url: ['Werte-Listen', 'Masseinheiten', el.id],\r\n      hasChildren: false,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [6, 1, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\nimport findIndex from 'lodash/findIndex'\r\n\r\nimport compareLabel from '../../compareLabel'\r\nimport allParentNodesExist from '../../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data, url }) => {\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const art = arten.find(a => a.id === url[1])\r\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`) || 0\r\n\r\n  return kulturen\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'kultur',\r\n      filterTable: 'kultur',\r\n      id: `kultur${el.id}`,\r\n      parentId: `art${url[1]}KulturFolder`,\r\n      label: get(el, 'gartenBygartenId.personBypersonId.name', '(kein Name)'),\r\n      url: ['Arten', url[1], 'Kulturen', el.id],\r\n      hasChildren: true,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, artIndex, 1, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\nimport findIndex from 'lodash/findIndex'\r\n\r\nimport compareLabel from '../../compareLabel'\r\nimport allParentNodesExist from '../../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data, url }) => {\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const art = arten.find(a => a.id === url[1])\r\n  const sammlungen = get(art, 'ae_art_art.sammlungsByartId', [])\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`) || 0\r\n\r\n  return sammlungen\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'sammlung',\r\n      filterTable: 'sammlung',\r\n      id: `sammlung${el.id}`,\r\n      parentId: `art${url[1]}SammlungenFolder`,\r\n      label: `${get(el, 'datum', '(kein Datum)')}: ${get(\r\n        el,\r\n        'herkunftByherkunftId.nr',\r\n        '(keine Nr.)',\r\n      )}`,\r\n      url: ['Arten', url[1], 'Sammlungen', el.id],\r\n      hasChildren: true,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, artIndex, 2, index]\r\n      return el\r\n    })\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artKulturZaehlungFolder',\r\n      id: `kultur${kulturId}ZaehlungFolder`,\r\n      label: 'Zählungen',\r\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Zaehlungen'],\r\n      sort: [1, artIndex, 1, kulturIndex, 1],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artKulturAbLieferungFolder',\r\n      id: `kultur${kulturId}AbLieferungFolder`,\r\n      label: 'Ab-Lieferungen',\r\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Ab-Lieferungen'],\r\n      sort: [1, artIndex, 1, kulturIndex, 3],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artKulturZuLieferungFolder',\r\n      id: `kultur${kulturId}ZuLieferungFolder`,\r\n      label: 'Zu-Lieferungen',\r\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Zu-Lieferungen'],\r\n      sort: [1, artIndex, 1, kulturIndex, 2],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artKulturEventFolder',\r\n      id: `kultur${kulturId}EventFolder`,\r\n      label: 'Events',\r\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Events'],\r\n      sort: [1, artIndex, 1, kulturIndex, 4],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import findIndex from 'lodash/findIndex'\r\n\r\nexport default ({ url, nodes }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return [\r\n    {\r\n      nodeType: 'folder',\r\n      menuType: 'artKulturInventarFolder',\r\n      id: `kultur${kulturId}InventarFolder`,\r\n      label: 'Inventare',\r\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Inventare'],\r\n      sort: [1, artIndex, 1, kulturIndex, 5],\r\n      hasChildren: true,\r\n    },\r\n  ]\r\n}\r\n","import get from 'lodash/get'\r\nimport findIndex from 'lodash/findIndex'\r\n\r\nimport compareLabel from '../../../compareLabel'\r\nimport allParentNodesExist from '../../../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data, url }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const art = arten.find(a => a.id === artId)\r\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\r\n  const kultur = kulturen.find(k => k.id === kulturId)\r\n  const zaehlungen = get(kultur, 'zaehlungsBykulturId', [])\r\n\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return zaehlungen\r\n    .map(el => ({\r\n      nodeType: 'table',\r\n      menuType: 'zaehlung',\r\n      filterTable: 'zaehlung',\r\n      id: `zaehlung${el.id}`,\r\n      parentId: `kultur${kulturId}ZaehlungFolder`,\r\n      label: get(el, 'datum', '(kein Datum)'),\r\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Zaehlungen', el.id],\r\n      hasChildren: false,\r\n    }))\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, artIndex, 1, kulturIndex, 1, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\nimport findIndex from 'lodash/findIndex'\r\n\r\nimport compareLabel from '../../../compareLabel'\r\nimport allParentNodesExist from '../../../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data, url }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const art = arten.find(a => a.id === artId)\r\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\r\n  const kultur = kulturen.find(k => k.id === kulturId)\r\n  const ablieferungen = get(kultur, 'lieferungsByvonKulturId', [])\r\n\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return ablieferungen\r\n    .map(el => {\r\n      const label = `${get(el, 'von_datum', '(kein von-Datum)')}: ${get(\r\n        el,\r\n        'personBypersonId.name',\r\n        '(kein Name)',\r\n      )}; ${get(el, 'lieferungTypWerteBytyp.wert', '(kein Typ)')}; ${get(\r\n        el,\r\n        'lieferungStatusWerteBystatus.wert',\r\n        '(kein Status)',\r\n      )}`\r\n\r\n      return {\r\n        nodeType: 'table',\r\n        menuType: 'ablieferung',\r\n        filterTable: 'lieferung',\r\n        id: `lieferung${el.id}`,\r\n        parentId: `kultur${kulturId}AbLieferungFolder`,\r\n        label,\r\n        url: ['Arten', artId, 'Kulturen', kulturId, 'Lieferungen', el.id],\r\n        hasChildren: false,\r\n      }\r\n    })\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, artIndex, 1, kulturIndex, 3, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\nimport findIndex from 'lodash/findIndex'\r\n\r\nimport compareLabel from '../../../compareLabel'\r\nimport allParentNodesExist from '../../../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data, url }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const art = arten.find(a => a.id === artId)\r\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\r\n  const kultur = kulturen.find(k => k.id === kulturId)\r\n  const zulieferungen = get(kultur, 'lieferungsBynachKulturId', [])\r\n\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return zulieferungen\r\n    .map(el => {\r\n      const label = `${get(el, 'nach_datum', '(kein nach-Datum)')}: ${get(\r\n        el,\r\n        'personBypersonId.name',\r\n        '(kein Name)',\r\n      )}; ${get(el, 'lieferungTypWerteBytyp.wert', '(kein Typ)')}; ${get(\r\n        el,\r\n        'lieferungStatusWerteBystatus.wert',\r\n        '(kein Status)',\r\n      )}`\r\n\r\n      return {\r\n        nodeType: 'table',\r\n        menuType: 'zulieferung',\r\n        filterTable: 'lieferung',\r\n        id: `lieferung${el.id}`,\r\n        parentId: `kultur${kulturId}ZuLieferungFolder`,\r\n        label,\r\n        url: ['Arten', artId, 'Kulturen', kulturId, 'Zu-Lieferungen', el.id],\r\n        hasChildren: false,\r\n      }\r\n    })\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, artIndex, 1, kulturIndex, 2, index]\r\n      return el\r\n    })\r\n}\r\n","import get from 'lodash/get'\r\nimport findIndex from 'lodash/findIndex'\r\n\r\nimport compareLabel from '../../../compareLabel'\r\nimport allParentNodesExist from '../../../../allParentNodesExist'\r\n\r\nexport default ({ nodes, data, url }) => {\r\n  const artId = url[1]\r\n  const kulturId = url[3]\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const art = arten.find(a => a.id === artId)\r\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\r\n  const kultur = kulturen.find(k => k.id === kulturId)\r\n  const events = get(kultur, 'kulturEventsBykulturId', [])\r\n\r\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\r\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\r\n  const kulturNodes = nodes.filter(\r\n    n => n.parentId === `art${artId}KulturFolder`,\r\n  )\r\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\r\n\r\n  return events\r\n    .map(el => {\r\n      const label = `${get(el, 'datum', '(kein Datum)')}: ${get(\r\n        el,\r\n        'event',\r\n        '(kein Event)',\r\n      )}`\r\n\r\n      return {\r\n        nodeType: 'table',\r\n        menuType: 'event',\r\n        filterTable: 'event',\r\n        id: `event${el.id}`,\r\n        parentId: `kultur${kulturId}EventFolder`,\r\n        label,\r\n        url: ['Arten', artId, 'Kulturen', kulturId, 'Events', el.id],\r\n        hasChildren: false,\r\n      }\r\n    })\r\n    .filter(n => allParentNodesExist(nodes, n))\r\n    .sort(compareLabel)\r\n    .map((el, index) => {\r\n      el.sort = [1, artIndex, 1, kulturIndex, 4, index]\r\n      return el\r\n    })\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport findIndex from 'lodash/findIndex'\r\nimport isEqual from 'lodash/isEqual'\r\nimport { FixedSizeList as List } from 'react-window'\r\n\r\nimport ErrorBoundary from '../ErrorBoundary'\r\nimport storeContext from '../../storeContext'\r\nimport Row from './Row'\r\nimport buildNodes from './nodes'\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  border-right-color: rgb(46, 125, 50);\r\n  border-right-width: 1px;\r\n  border-right-style: solid;\r\n  border-left-color: rgb(46, 125, 50);\r\n  border-left-width: 1px;\r\n  border-left-style: solid;\r\n  overflow: hidden;\r\n  @media print {\r\n    display: none !important;\r\n  }\r\n`\r\nconst StyledList = styled(List)`\r\n  overflow-x: hidden !important;\r\n`\r\n\r\nconst singleRowHeight = 23\r\n\r\nconst Tree = ({ data, dimensions }) => {\r\n  const store = useContext(storeContext)\r\n  const { activeNodeArray /*, setNodes*/ } = store.tree\r\n  // 1. build list depending on path using react-window\r\n  // 2. every node uses navigate to set url on click\r\n\r\n  const nodes = buildNodes({ store, data })\r\n  //setNodes(nodes)\r\n\r\n  const listRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    const index = findIndex(nodes, node => isEqual(node.url, activeNodeArray))\r\n    listRef.current.scrollToItem(index)\r\n  }, [activeNodeArray, nodes])\r\n\r\n  let height = 250\r\n  if (dimensions && dimensions.height && !isNaN(dimensions.height)) {\r\n    height = dimensions.height\r\n  }\r\n  let width = 250\r\n  if (dimensions && dimensions.width && !isNaN(dimensions.width)) {\r\n    width = dimensions.width\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Container>\r\n        <StyledList\r\n          height={height}\r\n          itemCount={nodes.length}\r\n          itemSize={singleRowHeight}\r\n          width={width}\r\n          ref={listRef}\r\n        >\r\n          {({ index, style }) => (\r\n            <Row key={index} style={style} index={index} node={nodes[index]} />\r\n          )}\r\n        </StyledList>\r\n      </Container>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport default observer(Tree)\r\n","import React, { useEffect, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport activeNodeArrayFromPathname from '../utils/activeNodeArrayFromPathname'\r\nimport openNodesFromActiveNodeArray from '../utils/openNodesFromActiveNodeArray'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport Tree from '../components/Tree'\r\nimport storeContext from '../storeContext'\r\n\r\nconst Container = styled.div`\r\n  margin-top: 64px;\r\n  min-height: calc(100vh - 64px);\r\n`\r\nconst StyledReflexContainer = styled(ReflexContainer)`\r\n  height: calc(100vh - 64px) !important;\r\n`\r\n\r\nconst query = graphql`\r\n  query TreeQuery {\r\n    hasura {\r\n      garten {\r\n        id\r\n        personBypersonId {\r\n          id\r\n          name\r\n        }\r\n        kultursBygartenId {\r\n          id\r\n          gartenBygartenId {\r\n            id\r\n            personBypersonId {\r\n              id\r\n              name\r\n            }\r\n          }\r\n          kulturEventsBykulturId {\r\n            id\r\n            datum\r\n            event\r\n          }\r\n          kulturInventarsBykulturId {\r\n            id\r\n            datum\r\n            kasten\r\n            beet\r\n            nr\r\n          }\r\n          zaehlungsBykulturId {\r\n            id\r\n            datum\r\n          }\r\n          sammlungInKultursBykulturId {\r\n            id\r\n            sammlungBysammlungId {\r\n              id\r\n              herkunftByherkunftId {\r\n                id\r\n                nr\r\n              }\r\n              lieferungsByvonSammlungId {\r\n                id\r\n                personBypersonId {\r\n                  id\r\n                  name\r\n                }\r\n                lieferungTypWerteBytyp {\r\n                  id\r\n                  wert\r\n                }\r\n                lieferungStatusWerteBystatus {\r\n                  id\r\n                  wert\r\n                }\r\n                von_datum\r\n                kulturBynachKulturId {\r\n                  id\r\n                  gartenBygartenId {\r\n                    id\r\n                    personBypersonId {\r\n                      id\r\n                      name\r\n                    }\r\n                  }\r\n                  kulturEventsBykulturId {\r\n                    id\r\n                    datum\r\n                    event\r\n                  }\r\n                  kulturInventarsBykulturId {\r\n                    id\r\n                    datum\r\n                    kasten\r\n                    beet\r\n                    nr\r\n                  }\r\n                  zaehlungsBykulturId {\r\n                    id\r\n                    datum\r\n                  }\r\n                }\r\n                nach_ausgepflanzt\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      ae_art(where: { ae_art_art: { id: { _is_null: false } } }) {\r\n        id\r\n        name\r\n        ae_art_art {\r\n          id\r\n          ae_id\r\n          kultursByartId {\r\n            id\r\n            gartenBygartenId {\r\n              id\r\n              personBypersonId {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            kulturEventsBykulturId {\r\n              id\r\n              datum\r\n              event\r\n            }\r\n            kulturInventarsBykulturId {\r\n              id\r\n              datum\r\n              kasten\r\n              beet\r\n              nr\r\n            }\r\n            zaehlungsBykulturId {\r\n              id\r\n              datum\r\n            }\r\n            lieferungsByvonKulturId {\r\n              id\r\n              personBypersonId {\r\n                id\r\n                name\r\n              }\r\n              lieferungTypWerteBytyp {\r\n                id\r\n                wert\r\n              }\r\n              lieferungStatusWerteBystatus {\r\n                id\r\n                wert\r\n              }\r\n              von_datum\r\n            }\r\n            lieferungsBynachKulturId {\r\n              id\r\n              personBypersonId {\r\n                id\r\n                name\r\n              }\r\n              lieferungTypWerteBytyp {\r\n                id\r\n                wert\r\n              }\r\n              lieferungStatusWerteBystatus {\r\n                id\r\n                wert\r\n              }\r\n              nach_datum\r\n            }\r\n            sammlungInKultursBykulturId {\r\n              id\r\n              sammlungBysammlungId {\r\n                id\r\n                herkunftByherkunftId {\r\n                  id\r\n                  nr\r\n                }\r\n                lieferungsByvonSammlungId {\r\n                  id\r\n                  personBypersonId {\r\n                    id\r\n                    name\r\n                  }\r\n                  lieferungTypWerteBytyp {\r\n                    id\r\n                    wert\r\n                  }\r\n                  lieferungStatusWerteBystatus {\r\n                    id\r\n                    wert\r\n                  }\r\n                  von_datum\r\n                  kulturBynachKulturId {\r\n                    id\r\n                    gartenBygartenId {\r\n                      id\r\n                      personBypersonId {\r\n                        id\r\n                        name\r\n                      }\r\n                    }\r\n                    kulturEventsBykulturId {\r\n                      id\r\n                      datum\r\n                      event\r\n                    }\r\n                    kulturInventarsBykulturId {\r\n                      id\r\n                      datum\r\n                      kasten\r\n                      beet\r\n                      nr\r\n                    }\r\n                    zaehlungsBykulturId {\r\n                      id\r\n                      datum\r\n                    }\r\n                  }\r\n                  nach_ausgepflanzt\r\n                }\r\n              }\r\n            }\r\n          }\r\n          sammlungsByartId {\r\n            id\r\n            art_id\r\n            herkunftByherkunftId {\r\n              id\r\n              nr\r\n            }\r\n            artByartId {\r\n              id\r\n              art_ae_art {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            datum\r\n            sammlungInKultursBysammlungId {\r\n              id\r\n              kulturBykulturId {\r\n                id\r\n                gartenBygartenId {\r\n                  id\r\n                  personBypersonId {\r\n                    id\r\n                    name\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            lieferungsByvonSammlungId {\r\n              id\r\n              personBypersonId {\r\n                id\r\n                name\r\n              }\r\n              lieferungTypWerteBytyp {\r\n                id\r\n                wert\r\n              }\r\n              lieferungStatusWerteBystatus {\r\n                id\r\n                wert\r\n              }\r\n              von_datum\r\n              kulturBynachKulturId {\r\n                id\r\n                gartenBygartenId {\r\n                  id\r\n                  personBypersonId {\r\n                    id\r\n                    name\r\n                  }\r\n                }\r\n                kulturEventsBykulturId {\r\n                  id\r\n                  datum\r\n                  event\r\n                }\r\n                kulturInventarsBykulturId {\r\n                  id\r\n                  datum\r\n                  kasten\r\n                  beet\r\n                  nr\r\n                }\r\n                zaehlungsBykulturId {\r\n                  id\r\n                  datum\r\n                }\r\n              }\r\n              nach_ausgepflanzt\r\n            }\r\n          }\r\n        }\r\n      }\r\n      herkunft {\r\n        id\r\n        lokalname\r\n        sammlungsByherkunftId {\r\n          id\r\n          art_id\r\n          artByartId {\r\n            id\r\n            art_ae_art {\r\n              id\r\n              name\r\n            }\r\n          }\r\n          datum\r\n          sammlungInKultursBysammlungId {\r\n            id\r\n            kulturBykulturId {\r\n              id\r\n              gartenBygartenId {\r\n                id\r\n                personBypersonId {\r\n                  id\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n          lieferungsByvonSammlungId {\r\n            id\r\n            personBypersonId {\r\n              id\r\n              name\r\n            }\r\n            lieferungTypWerteBytyp {\r\n              id\r\n              wert\r\n            }\r\n            lieferungStatusWerteBystatus {\r\n              id\r\n              wert\r\n            }\r\n            von_datum\r\n            kulturBynachKulturId {\r\n              id\r\n              gartenBygartenId {\r\n                id\r\n                personBypersonId {\r\n                  id\r\n                  name\r\n                }\r\n              }\r\n              kulturEventsBykulturId {\r\n                id\r\n                datum\r\n                event\r\n              }\r\n              kulturInventarsBykulturId {\r\n                id\r\n                datum\r\n                kasten\r\n                beet\r\n                nr\r\n              }\r\n              zaehlungsBykulturId {\r\n                id\r\n                datum\r\n              }\r\n            }\r\n            nach_ausgepflanzt\r\n          }\r\n        }\r\n      }\r\n      lieferung {\r\n        id\r\n        personBypersonId {\r\n          id\r\n          name\r\n        }\r\n        lieferungTypWerteBytyp {\r\n          id\r\n          wert\r\n        }\r\n        lieferungStatusWerteBystatus {\r\n          id\r\n          wert\r\n        }\r\n        von_datum\r\n        kulturBynachKulturId {\r\n          id\r\n          gartenBygartenId {\r\n            id\r\n            personBypersonId {\r\n              id\r\n              name\r\n            }\r\n          }\r\n          kulturEventsBykulturId {\r\n            id\r\n            datum\r\n            event\r\n          }\r\n          kulturInventarsBykulturId {\r\n            id\r\n            datum\r\n            kasten\r\n            beet\r\n            nr\r\n          }\r\n          zaehlungsBykulturId {\r\n            id\r\n            datum\r\n          }\r\n        }\r\n        nach_ausgepflanzt\r\n      }\r\n      person {\r\n        id\r\n        name\r\n        gartensBypersonId {\r\n          id\r\n        }\r\n        sammlungsBypersonId {\r\n          id\r\n          artByartId {\r\n            id\r\n            art_ae_art {\r\n              id\r\n              name\r\n            }\r\n          }\r\n          herkunftByherkunftId {\r\n            id\r\n            nr\r\n          }\r\n        }\r\n        lieferungsBypersonId {\r\n          id\r\n          personBypersonId {\r\n            id\r\n            name\r\n          }\r\n          lieferungTypWerteBytyp {\r\n            id\r\n            wert\r\n          }\r\n          lieferungStatusWerteBystatus {\r\n            id\r\n            wert\r\n          }\r\n          von_datum\r\n          kulturBynachKulturId {\r\n            id\r\n            artByartId {\r\n              id\r\n              art_ae_art {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            gartenBygartenId {\r\n              id\r\n              personBypersonId {\r\n                id\r\n                name\r\n              }\r\n            }\r\n          }\r\n          nach_ausgepflanzt\r\n        }\r\n      }\r\n      masseinheit_werte {\r\n        id\r\n        wert\r\n        sort\r\n      }\r\n      zaehleinheit_werte {\r\n        id\r\n        wert\r\n        sort\r\n      }\r\n      lieferung_zwischenlager_werte {\r\n        id\r\n        wert\r\n        sort\r\n      }\r\n      lieferung_status_werte {\r\n        id\r\n        wert\r\n        sort\r\n      }\r\n      lieferung_typ_werte {\r\n        id\r\n        wert\r\n        sort\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Vermehrung = ({ location }) => {\r\n  const store = useContext(storeContext)\r\n  const { setActiveNodeArray, setOpenNodes } = store.tree\r\n\r\n  const { pathname } = location\r\n  const activeNodeArray = activeNodeArrayFromPathname(pathname)\r\n  // on first render set openNodes\r\n  useEffect(() => {\r\n    setOpenNodes(openNodesFromActiveNodeArray(activeNodeArray))\r\n  }, [])\r\n  // when pathname changes, update activeNodeArray\r\n  useEffect(() => {\r\n    setActiveNodeArray(activeNodeArray)\r\n  }, [pathname])\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={query}\r\n      render={data => {\r\n        console.log('VermehrungCore, data:', data)\r\n        return (\r\n          <ErrorBoundary>\r\n            <Container>\r\n              <StyledReflexContainer orientation=\"vertical\">\r\n                <ReflexElement\r\n                  flex={0.3}\r\n                  propagateDimensions={true}\r\n                  renderOnResizeRate={200}\r\n                  renderOnResize={true}\r\n                >\r\n                  <Tree data={data} />\r\n                </ReflexElement>\r\n                <ReflexSplitter />\r\n                <ReflexElement\r\n                  propagateDimensions={true}\r\n                  renderOnResizeRate={200}\r\n                  renderOnResize={true}\r\n                >\r\n                  <p>Form</p>\r\n                </ReflexElement>\r\n              </StyledReflexContainer>\r\n            </Container>\r\n          </ErrorBoundary>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default observer(Vermehrung)\r\n","export default pathnamePassed => {\r\n  if (typeof window !== 'undefined') {\r\n    const pathname = pathnamePassed || window.location.pathname\r\n    return (\r\n      pathname\r\n        .split('/')\r\n        .filter(e => !!e && e !== 0)\r\n        .filter(e => e !== 'Vermehrung')\r\n        // need to decode in case of Umlaute\r\n        .map(e => decodeURIComponent(e))\r\n        // convert numbers to numbers\r\n        .map(e => {\r\n          if (!isNaN(e)) {\r\n            return +e\r\n          }\r\n          return e\r\n        })\r\n    )\r\n  }\r\n  return []\r\n}\r\n","export default activeNodeArray =>\r\n  activeNodeArray.map((n, index) => activeNodeArray.slice(0, index + 1))\r\n"],"sourceRoot":""}