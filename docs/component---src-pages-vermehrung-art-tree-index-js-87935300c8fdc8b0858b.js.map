{"version":3,"sources":["webpack:///./src/pages/Vermehrung/ArtTree/index.js","webpack:///./src/components/ErrorBoundary.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./node_modules/lodash/memoize.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/mobx-react-lite/dist/index.module.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Container","styled","div","withConfig","displayName","componentId","Node","props","level","FolderNode","observer","_ref","data","arten","get","personen","sOrte","zEW","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_ErrorBoundary__WEBPACK_IMPORTED_MODULE_5__","map","key","id","name","p","text","ErrorTitle","ReloadButton","Button","ErrorBoundary","_this","_Component","call","this","state","error","getDerivedStateFromError","render","_this2","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","message","variant","onClick","window","location","reload","children","React","Children","child","cloneElement","Object","assign","Component","baseGetTag","__webpack_require__","isObjectLike","symbolTag","module","exports","value","baseGet","object","path","defaultValue","result","undefined","castPath","toKey","index","length","isArray","isKey","stringToPath","toString","isSymbol","reIsDeepProp","reIsPlainProp","type","test","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","replace","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","func","cache","size","clear","MapCache","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","has","set","Cache","baseToString","Symbol","arrayMap","INFINITY","symbolProto","prototype","symbolToString","array","iteratee","Array","d","__webpack_exports__","mobx__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","Error","globalIsUsingStaticRendering","isUsingStaticRendering","EMPTY_ARRAY","useObserver","fn","baseComponentName","forceUpdate","tick","setTick","useForceUpdate","reaction","rendering","useUnmount","current","dispose","track","baseComponent","options","realOptions","forwardRef","wrappedComponent","ref","memoComponent","ObserverComponent","component","ObserverPropsCheck","componentName","propFullName","extraKey","hasProp","hasExtraProp","propTypes","dP","f","FProto","Function","nameRE","configurable","e"],"mappings":"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","file":"component---src-pages-vermehrung-art-tree-index-js-87935300c8fdc8b0858b.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport get from 'lodash/get'\r\n\r\nimport ErrorBoundary from '../../../components/ErrorBoundary'\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  border-right-color: rgb(46, 125, 50);\r\n  border-right-width: 1px;\r\n  border-right-style: solid;\r\n  border-left-color: rgb(46, 125, 50);\r\n  border-left-width: 1px;\r\n  border-left-style: solid;\r\n  overflow: hidden;\r\n  @media print {\r\n    display: none !important;\r\n  }\r\n`\r\nconst Node = styled.div`\r\n  padding-left: ${props => `${props.level * 12 - 12}px`};\r\n`\r\nconst FolderNode = styled(Node)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ArtTree = ({ data }) => {\r\n  const arten = get(data, 'hasura.ae_art', [])\r\n  const personen = get(data, 'hasura.person', [])\r\n  const sOrte = get(data, 'hasura.s_ort', [])\r\n  const zEW = get(data, 'hasura.zaehlung_einheit_werte', [])\r\n  // 1. build list depending on path using react-window\r\n  // 2. every node uses navigate to set url on click\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Container>\r\n        <FolderNode level={1}>Arten</FolderNode>\r\n        {arten.map(a => (\r\n          <Node level={2} key={a.id}>\r\n            {a.name}\r\n          </Node>\r\n        ))}\r\n        <FolderNode level={1}>Sammel-Orte</FolderNode>\r\n        {sOrte.map(p => (\r\n          <Node level={2} key={p.id}>\r\n            {p.name}\r\n          </Node>\r\n        ))}\r\n        <FolderNode level={1}>Personen</FolderNode>\r\n        {personen.map(p => (\r\n          <Node level={2} key={p.id}>\r\n            {p.name}\r\n          </Node>\r\n        ))}\r\n        <FolderNode level={1}>Werte-Listen</FolderNode>\r\n        <FolderNode level={2}>Zählungen: Einheiten</FolderNode>\r\n        {zEW.map(p => (\r\n          <Node level={3} key={p.id}>\r\n            {p.text}\r\n          </Node>\r\n        ))}\r\n      </Container>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport default observer(ArtTree)\r\n","// @flow\r\nimport React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Container = styled.div`\r\n  margin: 10px;\r\n`\r\nconst ErrorTitle = styled.div`\r\n  margin-bottom: 10px;\r\n`\r\nconst ReloadButton = styled(Button)`\r\n  margin-top: 10px !important;\r\n`\r\n\r\nclass ErrorBoundary extends Component {\r\n  static getDerivedStateFromError(error) {\r\n    // Catch errors in any components below and re-render with error message\r\n    return {\r\n      error,\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { error: null }\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state\r\n    if (error) {\r\n      console.log('error:', error)\r\n      return (\r\n        <Container>\r\n          <ErrorTitle>\r\n            Oh je, es ist ein Fehler aufgetreten! Bericht:\r\n          </ErrorTitle>\r\n          <div>{error.message}</div>\r\n          <ReloadButton\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              typeof window !== 'undefined' && window.location.reload(false)\r\n            }}\r\n          >\r\n            Neu laden\r\n          </ReloadButton>\r\n        </Container>\r\n      )\r\n    }\r\n    const { children } = this.props\r\n    var childrenWithProps = React.Children.map(children, child =>\r\n      React.cloneElement(child, { ...this.props }),\r\n    )\r\n\r\n    // Normally, just render children\r\n    // and pass all props\r\n    return childrenWithProps\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","import { spy, observable, Reaction, computed } from 'mobx';\nimport { useState, useRef, useMemo, useEffect, useCallback, forwardRef, memo } from 'react';\n\nif (!useState) {\r\n    throw new Error(\"mobx-react-lite requires React with Hooks support (alpha versions)\");\r\n}\r\nif (!spy) {\r\n    throw new Error(\"mobx-react-lite requires mobx at least version 4 to be available\");\r\n}\n\nfunction useObservable(initialValue) {\r\n    return useRef(observable(initialValue)).current;\r\n}\n\nfunction useComputed(func, inputs = []) {\r\n    const computed$$1 = useMemo(() => computed(func), inputs);\r\n    return computed$$1.get();\r\n}\n\n/**\r\n * Adds an observable effect (reaction, autorun, or anything else that returns a disposer) that will be registered upon component creation and disposed upon unmounting.\r\n * Returns the generated disposer for early disposal.\r\n *\r\n * @export\r\n * @template D\r\n * @param {() => D} disposerGenerator A function that returns the disposer of the wanted effect.\r\n * @param {ReadonlyArray<any>} [inputs=[]] If you want the effect to be automatically re-created when some variable(s) are changed then pass them in this array.\r\n * @returns {D}\r\n */\r\nfunction useDisposable(disposerGenerator, inputs = []) {\r\n    const disposerRef = useRef(undefined);\r\n    useMemo(() => {\r\n        disposerRef.current = disposerGenerator();\r\n    }, inputs);\r\n    useEffect(() => () => {\r\n        if (disposerRef.current && typeof disposerRef.current === \"function\") {\r\n            disposerRef.current();\r\n        }\r\n    }, inputs);\r\n    return disposerRef.current;\r\n}\n\n/**\r\n * Adds an observable effect (reaction, autorun, or anything else that returns a disposer) that will be registered upon component creation and disposed upon unmounting.\r\n * Returns the generated disposer for early disposal.\r\n *\r\n * @deprecated Renamed to useDisposable for a more universal use\r\n * @export\r\n * @template D\r\n * @param {() => D} disposerGenerator A function that returns the disposer of the wanted effect.\r\n * @param {ReadonlyArray<any>} [inputs=[]] If you want the effect to be automatically re-created when some variable(s) are changed then pass them in this array.\r\n * @returns {D}\r\n */\r\nfunction useObservableEffect(disposerGenerator, inputs = []) {\r\n    return useDisposable(disposerGenerator, inputs);\r\n}\n\nlet globalIsUsingStaticRendering = false;\r\nfunction useStaticRendering(enable) {\r\n    globalIsUsingStaticRendering = enable;\r\n}\r\nfunction isUsingStaticRendering() {\r\n    return globalIsUsingStaticRendering;\r\n}\n\nconst EMPTY_ARRAY = [];\r\nfunction useUnmount(fn) {\r\n    useEffect(() => fn, EMPTY_ARRAY);\r\n}\n\nfunction useForceUpdate() {\r\n    const [tick, setTick] = useState(1);\r\n    const update = useCallback(() => {\r\n        setTick(tick + 1);\r\n    }, []);\r\n    return update;\r\n}\r\nfunction useObserver(fn, baseComponentName = \"observed\") {\r\n    if (isUsingStaticRendering()) {\r\n        return fn();\r\n    }\r\n    // forceUpdate 2.0\r\n    const forceUpdate = useForceUpdate();\r\n    const reaction = useRef(new Reaction(`observer(${baseComponentName})`, () => {\r\n        forceUpdate();\r\n    }));\r\n    useUnmount(() => {\r\n        reaction.current.dispose();\r\n    });\r\n    // render the original component, but have the\r\n    // reaction track the observables, so that rendering\r\n    // can be invalidated (see above) once a dependency changes\r\n    let rendering;\r\n    reaction.current.track(() => {\r\n        rendering = fn();\r\n    });\r\n    return rendering;\r\n}\n\n// n.b. base case is not used for actual typings or exported in the typing files\r\nfunction observer(baseComponent, options) {\r\n    // The working of observer is explaind step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\r\n    if (isUsingStaticRendering()) {\r\n        return baseComponent;\r\n    }\r\n    const realOptions = Object.assign({ forwardRef: false }, options);\r\n    const baseComponentName = baseComponent.displayName || baseComponent.name;\r\n    const wrappedComponent = (props, ref) => {\r\n        return useObserver(() => baseComponent(props, ref), baseComponentName);\r\n    };\r\n    // memo; we are not intested in deep updates\r\n    // in props; we assume that if deep objects are changed,\r\n    // this is in observables, which would have been tracked anyway\r\n    let memoComponent;\r\n    if (realOptions.forwardRef) {\r\n        // we have to use forwardRef here because:\r\n        // 1. it cannot go before memo, only after it\r\n        // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\r\n        //    since it wouldn't be a callable function anymore\r\n        memoComponent = memo(forwardRef(wrappedComponent));\r\n    }\r\n    else {\r\n        memoComponent = memo(wrappedComponent);\r\n    }\r\n    memoComponent.displayName = baseComponentName;\r\n    return memoComponent;\r\n}\n\nfunction ObserverComponent({ children, render }) {\r\n    const component = children || render;\r\n    if (typeof component !== \"function\") {\r\n        return null;\r\n    }\r\n    return useObserver(component);\r\n}\r\nObserverComponent.propTypes = {\r\n    children: ObserverPropsCheck,\r\n    render: ObserverPropsCheck\r\n};\r\nObserverComponent.displayName = \"Observer\";\r\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\r\n    const extraKey = key === \"children\" ? \"render\" : \"children\";\r\n    const hasProp = typeof props[key] === \"function\";\r\n    const hasExtraProp = typeof props[extraKey] === \"function\";\r\n    if (hasProp && hasExtraProp) {\r\n        return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\r\n    }\r\n    if (hasProp || hasExtraProp) {\r\n        return null;\r\n    }\r\n    return new Error(\"Invalid prop `\" +\r\n        propFullName +\r\n        \"` of type `\" +\r\n        typeof props[key] +\r\n        \"` supplied to\" +\r\n        \" `\" +\r\n        componentName +\r\n        \"`, expected `function`.\");\r\n}\n\nexport { useObservable, useComputed, useDisposable, useObservableEffect, isUsingStaticRendering, useStaticRendering, observer, useObserver, ObserverComponent as Observer };\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}