{"version":3,"sources":["webpack:///./src/components/Tree/isNodeInActiveNodePath.js","webpack:///./src/components/Tree/isNodeOpen.js","webpack:///./src/components/Tree/toggleNode.js","webpack:///./src/components/Tree/openNode.js","webpack:///./src/components/Tree/Row.js","webpack:///./src/components/Tree/toggleNodeSymbol.js","webpack:///./src/components/Tree/sort.js","webpack:///./src/components/Tree/allParentNodesExist.js","webpack:///./src/components/Tree/nodes/compareLabel.js","webpack:///./src/components/Tree/nodes/index.js","webpack:///./src/components/Tree/nodes/art/artFolder.js","webpack:///./src/components/Tree/nodes/garten/gartenFolder.js","webpack:///./src/components/Tree/nodes/herkunft/herkunftFolder.js","webpack:///./src/components/Tree/nodes/lieferung/lieferungFolder.js","webpack:///./src/components/Tree/nodes/person/personFolder.js","webpack:///./src/components/Tree/nodes/werteListen/werteListenFolder.js","webpack:///./src/components/Tree/allParentNodesAreOpen.js","webpack:///./src/components/Tree/nodes/art/art.js","webpack:///./src/components/Tree/nodes/garten/garten.js","webpack:///./src/components/Tree/nodes/herkunft/herkunft.js","webpack:///./src/components/Tree/nodes/lieferung/lieferung.js","webpack:///./src/components/Tree/nodes/person/person.js","webpack:///./src/components/Tree/nodes/werteListen/masseinheitFolder.js","webpack:///./src/components/Tree/nodes/werteListen/zaehleinheitFolder.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungTypFolder.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungStatusFolder.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungZwischenlagerFolder.js","webpack:///./src/components/Tree/nodes/art/sammlung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/folder.js","webpack:///./src/components/Tree/nodes/werteListen/zaehleinheit.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungStatus.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungTyp.js","webpack:///./src/components/Tree/nodes/werteListen/lieferungZwischenlager.js","webpack:///./src/components/Tree/nodes/werteListen/masseinheit.js","webpack:///./src/components/Tree/nodes/art/kultur/index.js","webpack:///./src/components/Tree/nodes/art/sammlung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/zaehlung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/ablieferung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/zulieferung/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/event/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/inventar/folder.js","webpack:///./src/components/Tree/nodes/art/kultur/zaehlung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/ablieferung/index.js","webpack:///./src/components/Tree/nodes/art/kultur/zulieferung/index.js","webpack:///./src/components/Tree/index.js","webpack:///./src/pages/Vermehrung/index.js","webpack:///./src/components/ErrorBoundary.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Account.js","webpack:///./src/components/Header/More.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout.js"],"names":["isNodeInActiveNodePath","node","activeNodeArray","url","activeNodeArrayPartWithEqualLength","slice","length","isEqual","isNodeOpen","openNodes","some","n","toggleNode","_ref","store","Error","_store$tree","tree","setActiveNodeArray","newActiveNodeArray","concat","nodeIsOpen","setOpenNodes","openNode","navigate","join","StyledNode","styled","div","withConfig","displayName","componentId","props","Number","StyledExpandMoreIcon","ExpandMoreIcon","StyledChevronRightIcon","ChevronRightIcon","StyledMoreHorizIcon","MoreHorizIcon","SymbolDiv","SymbolSpan","span","TextSpan","observer","symbolIcon","index","style","useContext","storeContext","myProps","key","nodeIsInActiveNodePath","useSymbolIcon","useSymbolSpan","hasChildren","label","dataUrl","JSON","stringify","level","onClickNode","useCallback","onClickNodeSymbol","newOpenNodes","filter","push","toggleNodeSymbol","react_default","a","createElement","es6","id","menuType","collect","nodeId","nodeLabel","data-level","data-nodeisinactivenodepath","data-id","data-parentid","parentId","data-url","data-nodetype","nodeType","data-label","data-menutype","onClick","data-nodeisopen","exists","value","Tree_sort","b","sort","i","isNaN","aI","toString","bI","toLowerCase","allParentNodesExist","nodes","nodePassed","parentNodes","nodeUrl","pop","nodeUrls","map","every","compareLabel","compare","Tree_nodes","data","forEach","allParentNodesAreOpen","get","el","filterTable","buildArtArt","buildGartenGarten","buildHerkunftHerkunft","buildLieferungLieferung","buildPersonPerson","artNodes","artIndex","findIndex","buildArtSammlungFolder","buildArtKulturFolder","buildWLZaehleinheitZaehleinheit","buildWLLieferungStatusStatus","buildWLLieferungTypTyp","buildWLLieferungZwischenlagerZwischenlager","buildWLMasseinheitMasseinheit","art","find","kulturen","buildArtKultur","sammlungen","buildArtSammlung","artId","kulturId","kulturNodes","kulturIndex","buildArtKulturZaehlungFolder","buildArtKulturAbLieferungFolder","buildArtKulturZuLieferungFolder","buildArtKulturEventFolder","buildArtKulturInventarFolder","kultur","k","zaehlungen","buildArtKulturZaehlungZaehlung","ablieferungen","buildArtKulturLieferungAbLieferung","zulieferungen","buildArtKulturLieferungZuLieferung","uniqBy","Container","StyledList","List","dimensions","buildNodes","listRef","React","createRef","useEffect","current","scrollToItem","height","width","ErrorBoundary","itemCount","itemSize","ref","_ref2","Tree_Row","StyledReflexContainer","ReflexContainer","query","location","path","pathname","split","v","Layout","Vermehrung_Container","orientation","es","flex","propagateDimensions","renderOnResizeRate","renderOnResize","components_Tree","ErrorTitle","ReloadButton","Button","_this","_Component","call","this","state","error","getDerivedStateFromError","render","_this2","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","message","variant","window","reload","children","Children","child","cloneElement","Object","assign","Component","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","IconContainer","UserNameDiv","email","_useState","useState","anchorEl","setAnchorEl","onClickMenu","event","currentTarget","onCloseMenu","onClickSignup","onClickLogin","onClickLogout","Fragment","IconButton_default","aria-haspopup","aria-label","color","title","fa","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","MehrButton","onClickUserDocs","onClickTechDocs","onClickKontakt","onClickMehrButton","aria-owns","Boolean","SiteTitle","Typography","Spacer","NavButton","active","Header","onClickSiteTitle","AppBar_default","position","Toolbar_default","noWrap","startsWith","component","Link","to","Header_Account","More","gatsby_browser_entry","Helmet_default","site","siteMetadata","meta","name","content","lang","components_Header","_4130953669"],"mappings":"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","file":"component---src-pages-vermehrung-index-js-306ecfd831c9ad8ed503.js","sourcesContent":["import isEqual from 'lodash/isEqual'\n\nexport default (node, activeNodeArray) => {\n  if (!node) return false\n  if (!node.url) return false\n  if (!activeNodeArray) return false\n  const activeNodeArrayPartWithEqualLength = activeNodeArray.slice(\n    0,\n    node.url.length,\n  )\n  return isEqual(activeNodeArrayPartWithEqualLength, node.url)\n}\n","import isEqual from 'lodash/isEqual'\n\nexport default (openNodes, url) => {\n  if (!url) return false\n  if (!openNodes) return false\n  if (!openNodes.some) return false\n\n  return openNodes.some(n => isEqual(n, url))\n}\n","import { navigate } from '@reach/router'\n\nimport isNodeOpen from './isNodeOpen'\nimport isNodeInActiveNodePath from './isNodeInActiveNodePath'\nimport openNode from './openNode'\n\nexport default ({ node, store }) => {\n  if (!node.url) throw new Error('passed node has no url')\n  const { openNodes, activeNodeArray, setActiveNodeArray } = store.tree\n\n  const newActiveNodeArray = [...node.url]\n  const nodeIsOpen = isNodeOpen(openNodes, node.url)\n  if (nodeIsOpen && isNodeInActiveNodePath(node, activeNodeArray)) {\n    // need to check if node is last in activeNodePath\n    if (node.url.length === activeNodeArray.length) {\n      /**\n       * dont do anything:\n       * klicked node should always be / remain active\n       */\n    } else {\n      // leave newActiveNodeArray as it is\n    }\n  } else if (!nodeIsOpen) {\n    openNode({ node, openNodes, store })\n  }\n\n  setActiveNodeArray(newActiveNodeArray)\n  navigate(`/Vermehrung/${node.url.join('/')}`)\n}\n","import isNodeOpen from './isNodeOpen'\n\nexport default ({ node, openNodes, store }) => {\n  const { setOpenNodes } = store.tree\n  // make sure this node's url is not yet contained\n  // otherwise same nodes will be added multiple times!\n  if (isNodeOpen(openNodes, node.url)) return\n\n  let newOpenNodes = [...openNodes, node.url]\n  setOpenNodes(newOpenNodes)\n}\n","import React, { useContext, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { ContextMenuTrigger } from 'react-contextmenu'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport { observer } from 'mobx-react-lite'\n\nimport isNodeInActiveNodePath from './isNodeInActiveNodePath'\nimport isNodeOpen from './isNodeOpen'\nimport toggleNode from './toggleNode'\nimport toggleNodeSymbol from './toggleNodeSymbol'\nimport storeContext from '../../storeContext'\n\nconst singleRowHeight = 23\nconst StyledNode = styled.div`\n  padding-left: ${props => `${Number(props['data-level']) * 17 - 10}px`};\n  height: ${singleRowHeight}px;\n  max-height: ${singleRowHeight}px;\n  box-sizing: border-box;\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n  white-space: nowrap;\n  user-select: none;\n  color: ${props =>\n    props['data-nodeisinactivenodepath'] ? '#D84315' : 'inherit'};\n`\nconst StyledExpandMoreIcon = styled(ExpandMoreIcon)`\n  margin-top: ${props =>\n    props['data-nodeisopen'] ? '-6px !important' : '1px !important'};\n  margin-left: ${props => (props['data-nodeisopen'] ? '-1px !important' : 0)};\n  margin-right: ${props => (props['data-nodeisopen'] ? '-5px !important' : 0)};\n  padding-left: ${props => (props['data-nodeisopen'] ? '2px' : '2px')};\n  height: ${props =>\n    props['data-nodeisopen'] ? '30px !important' : '22px !important'};\n  width: ${props =>\n    props['data-nodeisopen'] ? '30px !important' : '26px !important'};\n  color: ${props =>\n    props['data-nodeisinactivenodepath'] ? '#D84315 !important' : 'inherit'};\n  cursor: pointer;\n  &:hover {\n    color: #f57c00 !important;\n  }\n`\nconst StyledChevronRightIcon = styled(ChevronRightIcon)`\n  margin-top: -2px !important;\n  padding-left: 2px;\n  height: 22px !important;\n  width: 26px;\n  cursor: pointer;\n  &:hover {\n    color: #f57c00 !important;\n  }\n`\nconst StyledMoreHorizIcon = styled(MoreHorizIcon)`\n  margin-top: ${props =>\n    props['data-nodeisinactivenodepath']\n      ? '-5px !important'\n      : '-2px !important'};\n  padding-left: ${props =>\n    props['data-nodeisinactivenodepath'] ? '1px' : '2px'};\n  height: ${props =>\n    props['data-nodeisinactivenodepath']\n      ? '26px !important'\n      : '22px !important'};\n  color: ${props =>\n    props['data-nodeisinactivenodepath'] ? '#D84315 !important' : 'inherit'};\n  width: 26px;\n  cursor: pointer;\n  &:hover {\n    color: #f57c00 !important;\n  }\n`\nconst SymbolDiv = styled.div`\n  cursor: pointer;\n`\nconst SymbolSpan = styled.span`\n  padding-right: 8px !important;\n  padding-left: ${props =>\n    props['data-nodeisinactivenodepath'] ? '7px' : '9px'};\n  font-weight: ${props =>\n    props['data-nodeisinactivenodepath'] ? '900 !important' : 'inherit'};\n  margin-top: -9px !important;\n  font-size: 28px !important;\n  width: 9px;\n`\nconst TextSpan = styled.span`\n  margin-left: 0;\n  font-size: 16px !important;\n  font-weight: ${props =>\n    props['data-nodeisinactivenodepath'] ? '900 !important' : 'inherit'};\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow-x: hidden !important;\n  cursor: pointer;\n  &:hover {\n    color: #f57c00;\n  }\n`\n\nconst Row = ({ index, style, node }) => {\n  const store = useContext(storeContext)\n  const { tree } = store\n  const { openNodes, activeNodeArray } = tree\n\n  const myProps = { key: index }\n  const nodeIsInActiveNodePath = isNodeInActiveNodePath(node, activeNodeArray)\n  const nodeIsOpen = isNodeOpen(openNodes, node.url)\n  // build symbols\n  let useSymbolIcon = true\n  let useSymbolSpan = false\n  let symbolIcon\n  if (node.hasChildren && nodeIsOpen) {\n    symbolIcon = 'expandMore'\n  } else if (node.hasChildren) {\n    symbolIcon = 'chevronRight'\n  } else if (node.label === 'lade Daten...') {\n    symbolIcon = 'moreHoriz'\n  } else {\n    useSymbolSpan = true\n    useSymbolIcon = false\n  }\n  const dataUrl = JSON.stringify(node.url)\n  const level =\n    node.url[0] === 'Projekte' ? node.url.length - 1 : node.url.length\n\n  const onClickNode = useCallback(() => {\n    toggleNode({\n      node,\n      activeNodeArray,\n      store,\n    })\n  }, [node, openNodes, activeNodeArray])\n  const onClickNodeSymbol = useCallback(() => {\n    toggleNodeSymbol({ node, store })\n  }, [node, openNodes])\n\n  return (\n    <div style={style}>\n      <ContextMenuTrigger\n        id={node.menuType}\n        collect={() => myProps}\n        nodeId={node.id}\n        nodeLabel={node.label}\n        key={`${node.menuType}${node.id}`}\n      >\n        <StyledNode\n          data-level={level}\n          data-nodeisinactivenodepath={nodeIsInActiveNodePath}\n          data-id={node.id}\n          data-parentid={node.parentId}\n          data-url={dataUrl}\n          data-nodetype={node.nodeType}\n          data-label={node.label}\n          data-menutype={node.menuType}\n        >\n          {useSymbolIcon && (\n            <SymbolDiv onClick={onClickNodeSymbol}>\n              {symbolIcon === 'expandMore' && (\n                <StyledExpandMoreIcon\n                  data-nodeisinactivenodepath={nodeIsInActiveNodePath}\n                  data-nodeisopen={nodeIsOpen}\n                />\n              )}\n              {symbolIcon === 'chevronRight' && <StyledChevronRightIcon />}\n              {symbolIcon === 'moreHoriz' && (\n                <StyledMoreHorizIcon\n                  data-nodeisinactivenodepath={nodeIsInActiveNodePath}\n                />\n              )}\n            </SymbolDiv>\n          )}\n          {useSymbolSpan && (\n            <SymbolSpan data-nodeisinactivenodepath={nodeIsInActiveNodePath}>\n              {'-'}\n            </SymbolSpan>\n          )}\n          <TextSpan\n            data-nodeisinactivenodepath={nodeIsInActiveNodePath}\n            node={node}\n            onClick={onClickNode}\n          >\n            {node.label}\n          </TextSpan>\n        </StyledNode>\n      </ContextMenuTrigger>\n    </div>\n  )\n}\n\nexport default observer(Row)\n","import isEqual from 'lodash/isEqual'\n\nimport isNodeOpen from './isNodeOpen'\n\nexport default ({ node, store }) => {\n  if (!node.url) throw new Error('passed node has no url')\n  const { setOpenNodes, openNodes } = store.tree\n\n  let newOpenNodes = [...openNodes]\n  if (isNodeOpen(openNodes, node.url)) {\n    newOpenNodes = newOpenNodes.filter(n => !isEqual(n, node.url))\n  } else {\n    newOpenNodes.push(node.url)\n  }\n  setOpenNodes(newOpenNodes)\n}\n","const exists = value => !!value || value === 0\n\nconst sort = (a, b, i) => {\n  // return if no element at this index\n  if (!exists(a[i]) && !exists(b[i])) return 0\n  // sort array with no more element at this position first\n  if (!exists(a[i]) && exists(b[i])) return -1\n  if (exists(a[i]) && !exists(b[i])) return 1\n  // sort numbers by value\n  if (!isNaN(a[i]) && !isNaN(b[i])) {\n    if (a[i] === b[i]) return sort(a, b, i + 1)\n    return a - b\n  }\n  // use string value to compare mixed types\n  const aI = isNaN(a[i]) ? a[i] : a[i].toString()\n  const bI = isNaN(b[i]) ? b[i] : b[i].toString()\n  if (aI.toLowerCase() === bI.toLowerCase()) return sort(a, b, i + 1)\n  if (aI.toLowerCase() < bI.toLowerCase()) return -1\n  if (aI.toLowerCase() > bI.toLowerCase()) return 1\n}\n\nexport default (a, b) => sort(a, b, 0)\n","import isEqual from 'lodash/isEqual'\n\nexport default (nodes, nodePassed) => {\n  let parentNodes = []\n  const nodeUrl = [...nodePassed.url]\n  // pop own url - check only for parents\n  nodeUrl.pop()\n  for (let i = 1; i < nodeUrl.length; i++) {\n    parentNodes.push(nodeUrl.slice(0, i))\n  }\n  // remove 'Projekte' as that is not contained in openNodes\n  parentNodes = parentNodes.filter(\n    n => !(n.length === 1 && n[0] === 'Projekte'),\n  )\n  if (parentNodes.length === 0) return true\n\n  const nodeUrls = nodes.map(n => n.url)\n  return parentNodes.every(n => nodeUrls.some(url => isEqual(url, n)))\n}\n","export default (a, b) => {\n  if (a.label.toLowerCase() < b.label.toLowerCase()) {\n    return -1\n  } else if (a.label.toLowerCase() > b.label.toLowerCase()) {\n    return 1\n  }\n  return 0\n}\n","import uniqBy from 'lodash/uniqBy'\n//import get from 'lodash/get'\n\nimport sort from '../sort'\nimport allParentNodesExist from '../allParentNodesExist'\nimport allParentNodesAreOpen from '../allParentNodesAreOpen'\nimport buildArtFolder from './art/artFolder'\nimport buildArtArt from './art/art'\nimport buildArtSammlungFolder from './art/sammlung/folder'\nimport buildArtSammlung from './art/sammlung'\nimport buildArtKulturFolder from './art/kultur/folder'\nimport buildArtKultur from './art/kultur'\nimport buildArtKulturEventFolder from './art/kultur/event/folder'\nimport buildArtKulturZaehlungFolder from './art/kultur/zaehlung/folder'\nimport buildArtKulturZaehlungZaehlung from './art/kultur/zaehlung'\nimport buildArtKulturInventarFolder from './art/kultur/inventar/folder'\nimport buildArtKulturAbLieferungFolder from './art/kultur/ablieferung/folder'\nimport buildArtKulturLieferungAbLieferung from './art/kultur/ablieferung'\nimport buildArtKulturZuLieferungFolder from './art/kultur/zulieferung/folder'\nimport buildArtKulturLieferungZuLieferung from './art/kultur/zulieferung'\nimport buildGartenFolder from './garten/gartenFolder'\nimport buildGartenGarten from './garten/garten'\nimport buildHerkunftFolder from './herkunft/herkunftFolder'\nimport buildHerkunftHerkunft from './herkunft/herkunft'\nimport buildLieferungFolder from './lieferung/lieferungFolder'\nimport buildLieferungLieferung from './lieferung/lieferung'\nimport buildPersonFolder from './person/personFolder'\nimport buildPersonPerson from './person/person'\nimport buildWerteListenFolder from './werteListen/werteListenFolder'\nimport buildWLMasseinheitFolder from './werteListen/masseinheitFolder'\nimport buildWLMasseinheitMasseinheit from './werteListen/masseinheit'\nimport buildWLZaehleinheitFolder from './werteListen/zaehleinheitFolder'\nimport buildWLZaehleinheitZaehleinheit from './werteListen/zaehleinheit'\nimport buildWLLieferungTypFolder from './werteListen/lieferungTypFolder'\nimport buildWLLieferungTypTyp from './werteListen/lieferungTyp'\nimport buildWLLieferungStatusFolder from './werteListen/lieferungStatusFolder'\nimport buildWLLieferungStatusStatus from './werteListen/lieferungStatus'\nimport buildWLLieferungZwischenlagerFolder from './werteListen/lieferungZwischenlagerFolder'\nimport buildWLLieferungZwischenlagerZwischenlager from './werteListen/lieferungZwischenlager'\n\nconst compare = (a, b) => {\n  // sort a before, if it has no value at this index\n  if (a !== 0 && !a) return -1\n  // sort a after if b has no value at this index\n  if (b !== 0 && !b) return 1\n  // sort a before if its value is smaller\n  return a - b\n}\n\nexport default ({ store, data }) => {\n  const openNodes = store.tree.openNodes.sort(sort)\n\n  let nodes = [\n    ...buildArtFolder(),\n    ...buildGartenFolder(),\n    ...buildHerkunftFolder(),\n    ...buildLieferungFolder(),\n    ...buildPersonFolder(),\n    ...buildWerteListenFolder(),\n  ]\n\n  /**\n   * We ALWAYS add an array of nodes,\n   * never a single one\n   * not even for folders that are never more than one\n   * because the function adding the nodes\n   * should be able to pass none as well\n   * for instance if a parent node is not open\n   * or some filter is active\n   */\n  openNodes.forEach(url => {\n    if (!allParentNodesAreOpen(openNodes, url)) return\n    if (url.length === 1 && url[0] === 'Arten') {\n      nodes = [\n        ...nodes,\n        ...buildArtArt({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (url.length === 1 && url[0] === 'Gaerten') {\n      nodes = [\n        ...nodes,\n        ...buildGartenGarten({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (url.length === 1 && url[0] === 'Herkuenfte') {\n      nodes = [\n        ...nodes,\n        ...buildHerkunftHerkunft({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (url.length === 1 && url[0] === 'Lieferungen') {\n      nodes = [\n        ...nodes,\n        ...buildLieferungLieferung({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (url.length === 1 && url[0] === 'Personen') {\n      nodes = [\n        ...nodes,\n        ...buildPersonPerson({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (url.length === 1 && url[0] === 'Werte-Listen') {\n      nodes = [\n        ...nodes,\n        ...buildWLMasseinheitFolder({\n          nodes,\n          data,\n        }),\n        ...buildWLZaehleinheitFolder({\n          nodes,\n          data,\n        }),\n        ...buildWLLieferungTypFolder({\n          nodes,\n          data,\n        }),\n        ...buildWLLieferungStatusFolder({\n          nodes,\n          data,\n        }),\n        ...buildWLLieferungZwischenlagerFolder({\n          nodes,\n          data,\n        }),\n      ]\n    }\n\n    if (url.length === 2 && url[0] === 'Arten') {\n      nodes = [\n        ...nodes,\n        ...buildArtSammlungFolder({\n          nodes,\n          url,\n        }),\n        ...buildArtKulturFolder({\n          nodes,\n          url,\n        }),\n      ]\n    }\n\n    if (\n      url.length === 2 &&\n      url[0] === 'Werte-Listen' &&\n      url[1] === 'Zaehleinheiten'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildWLZaehleinheitZaehleinheit({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (\n      url.length === 2 &&\n      url[0] === 'Werte-Listen' &&\n      url[1] === 'Lieferung-Status'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildWLLieferungStatusStatus({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (\n      url.length === 2 &&\n      url[0] === 'Werte-Listen' &&\n      url[1] === 'Lieferung-Typ'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildWLLieferungTypTyp({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (\n      url.length === 2 &&\n      url[0] === 'Werte-Listen' &&\n      url[1] === 'Lieferung-Zwischenlager'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildWLLieferungZwischenlagerZwischenlager({\n          nodes,\n          data,\n        }),\n      ]\n    }\n    if (\n      url.length === 2 &&\n      url[0] === 'Werte-Listen' &&\n      url[1] === 'Masseinheiten'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildWLMasseinheitMasseinheit({\n          nodes,\n          data,\n        }),\n      ]\n    }\n\n    if (url.length === 3 && url[0] === 'Arten' && url[2] === 'Kulturen') {\n      nodes = [\n        ...nodes,\n        ...buildArtKultur({\n          nodes,\n          data,\n          url,\n        }),\n      ]\n    }\n    if (url.length === 3 && url[0] === 'Arten' && url[2] === 'Sammlungen') {\n      nodes = [\n        ...nodes,\n        ...buildArtSammlung({\n          nodes,\n          data,\n          url,\n        }),\n      ]\n    }\n\n    if (url.length === 4 && url[0] === 'Arten' && url[2] === 'Kulturen') {\n      nodes = [\n        ...nodes,\n        ...buildArtKulturZaehlungFolder({\n          nodes,\n          url,\n        }),\n        ...buildArtKulturAbLieferungFolder({\n          nodes,\n          url,\n        }),\n        ...buildArtKulturZuLieferungFolder({\n          nodes,\n          url,\n        }),\n        ...buildArtKulturEventFolder({\n          nodes,\n          url,\n        }),\n        ...buildArtKulturInventarFolder({\n          nodes,\n          url,\n        }),\n      ]\n    }\n\n    if (\n      url.length === 5 &&\n      url[0] === 'Arten' &&\n      url[2] === 'Kulturen' &&\n      url[4] === 'Zaehlungen'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildArtKulturZaehlungZaehlung({\n          nodes,\n          data,\n          url,\n        }),\n      ]\n    }\n    if (\n      url.length === 5 &&\n      url[0] === 'Arten' &&\n      url[2] === 'Kulturen' &&\n      url[4] === 'Ab-Lieferungen'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildArtKulturLieferungAbLieferung({\n          nodes,\n          data,\n          url,\n        }),\n      ]\n    }\n    if (\n      url.length === 5 &&\n      url[0] === 'Arten' &&\n      url[2] === 'Kulturen' &&\n      url[4] === 'Zu-Lieferungen'\n    ) {\n      nodes = [\n        ...nodes,\n        ...buildArtKulturLieferungZuLieferung({\n          nodes,\n          data,\n          url,\n        }),\n      ]\n    }\n  })\n\n  nodes = nodes.filter(n => allParentNodesExist(nodes, n))\n  /**\n   * There is something weird happening when filtering data\n   * that leads to duplicate nodes\n   * Need to solve that but in the meantime use uniqBy\n   */\n  nodes = uniqBy(nodes, n => n.url.join())\n\n  /**\n   * As all nodes are now in one flat list,\n   * we need to sort them\n   *\n   * This is the sorting algorithm:\n   *\n   * compare the sort array value in the nodes\n   * to determine sorting\n   *\n   * compare arrays element by element, starting with first\n   * if a has no value at this index (> a is folder), sort a before b\n   * if b has no value at this index (> b is folder), sort a after b\n   * if a is smaller than b, sort a before b\n   * if both array elements at this index are same,\n   * compare values at next index\n   *\n   * see: stackoverflow.com/questions/13211709/javascript-sort-array-by-multiple-number-fields\n   */\n  return nodes.sort(\n    (a, b) =>\n      compare(a.sort[0], b.sort[0]) ||\n      compare(a.sort[1], b.sort[1]) ||\n      compare(a.sort[2], b.sort[2]) ||\n      compare(a.sort[3], b.sort[3]) ||\n      compare(a.sort[4], b.sort[4]) ||\n      compare(a.sort[5], b.sort[5]) ||\n      compare(a.sort[6], b.sort[6]) ||\n      compare(a.sort[7], b.sort[7]) ||\n      compare(a.sort[8], b.sort[8]) ||\n      compare(a.sort[9], b.sort[9]) ||\n      compare(a.sort[10], b.sort[10]),\n  )\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artFolder',\n      id: 'artFolder',\n      label: 'Arten',\n      url: ['Arten'],\n      sort: [1],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'gartenFolder',\n      id: 'gartenFolder',\n      label: 'Gärten',\n      url: ['Gaerten'],\n      sort: [2],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'herkunftFolder',\n      id: 'herkunftFolder',\n      label: 'Herkünfte',\n      url: ['Herkuenfte'],\n      sort: [3],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'lieferungFolder',\n      id: 'lieferungFolder',\n      label: 'Lieferungen',\n      url: ['Lieferungen'],\n      sort: [4],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'personFolder',\n      id: 'personFolder',\n      label: 'Personen',\n      url: ['Personen'],\n      sort: [5],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'werteListenFolder',\n      id: 'werteListenFolder',\n      label: 'Werte-Listen',\n      url: ['Werte-Listen'],\n      sort: [6],\n      hasChildren: true,\n    },\n  ]\n}\n","import isNodeOpen from './isNodeOpen'\n\nexport default (openNodes, nodePassed) => {\n  let parentNodes = []\n  const node = [...nodePassed]\n  for (let i = 1; i < node.length; i++) {\n    parentNodes.push(node.slice(0, i))\n  }\n  // remove 'Projekte' as that is not contained in openNodes\n  parentNodes = parentNodes.filter(\n    n => !(n.length === 1 && n[0] === 'Projekte'),\n  )\n  if (parentNodes.length === 0) return true\n  return parentNodes.every(n => isNodeOpen(openNodes, n))\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const arten = get(data, 'hasura.ae_art', [])\n\n  return arten\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'art',\n      filterTable: 'art',\n      id: `art${el.id}`,\n      parentId: 'artFolder',\n      label: get(el, 'name', '(keine Art gewählt)'),\n      url: ['Arten', el.id],\n      hasChildren: true,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [1, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const gaerten = get(data, 'hasura.garten', [])\n\n  return gaerten\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'garten',\n      filterTable: 'garten',\n      id: `garten${el.id}`,\n      parentId: 'gartenFolder',\n      label: get(el, 'personBypersonId.name', '(kein Garten gewählt)'),\n      url: ['Gaerten', el.id],\n      hasChildren: true,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [2, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const herkuenfte = get(data, 'hasura.herkunft', [])\n\n  return (\n    herkuenfte\n      .map(el => ({\n        nodeType: 'table',\n        menuType: 'herkunft',\n        filterTable: 'herkunft',\n        id: `herkunft${el.id}`,\n        parentId: 'herkunftFolder',\n        label: get(el, 'lokalname', '(keine Herkunft gewählt)'),\n        url: ['Herkuenfte', el.id],\n        hasChildren: true,\n      }))\n      .filter(n => allParentNodesExist(nodes, n))\n      // sort by label\n      .sort(compareLabel)\n      .map((el, index) => {\n        el.sort = [3, index]\n        return el\n      })\n  )\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const lieferungen = get(data, 'hasura.lieferung', [])\n\n  return (\n    lieferungen\n      .map(el => ({\n        nodeType: 'table',\n        menuType: 'lieferung',\n        filterTable: 'lieferung',\n        id: `lieferung${el.id}`,\n        parentId: 'lieferungFolder',\n        label: `${get(el, 'von_datum', '(kein von-Datum)')}: ${get(\n          el,\n          'personBypersonId.name',\n          '(keine Person)',\n        )}`,\n        url: ['Lieferungen', el.id],\n        hasChildren: true,\n      }))\n      .filter(n => allParentNodesExist(nodes, n))\n      // sort by label\n      .sort(compareLabel)\n      .map((el, index) => {\n        el.sort = [4, index]\n        return el\n      })\n  )\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const personen = get(data, 'hasura.person', [])\n\n  return personen\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'person',\n      filterTable: 'person',\n      id: `person${el.id}`,\n      parentId: 'personFolder',\n      label: get(el, 'name', '(kein Name)'),\n      url: ['Personen', el.id],\n      hasChildren: true,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [5, index]\n      return el\n    })\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'masseinheitenFolder',\n      id: 'masseinheitenFolder',\n      parentId: 'werteListenFolder',\n      label: 'Masseinheiten',\n      url: ['Werte-Listen', 'Masseinheiten'],\n      sort: [6, 1],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'zaehleinheitenFolder',\n      id: 'zaehleinheitenFolder',\n      parentId: 'werteListenFolder',\n      label: 'Zähleinheiten',\n      url: ['Werte-Listen', 'Zaehleinheiten'],\n      sort: [6, 2],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'lieferungTypFolder',\n      id: 'lieferungTypFolder',\n      parentId: 'werteListenFolder',\n      label: 'Lieferung: Typ',\n      url: ['Werte-Listen', 'Lieferung-Typ'],\n      sort: [6, 3],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'lieferungStatusFolder',\n      id: 'lieferungStatusFolder',\n      parentId: 'werteListenFolder',\n      label: 'Lieferung: Status',\n      url: ['Werte-Listen', 'Lieferung-Status'],\n      sort: [6, 4],\n      hasChildren: true,\n    },\n  ]\n}\n","export default () => {\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'lieferungZwischenlagerFolder',\n      id: 'lieferungZwischenlagerFolder',\n      parentId: 'werteListenFolder',\n      label: 'Lieferung: Zwischenlager',\n      url: ['Werte-Listen', 'Lieferung-Zwischenlager'],\n      sort: [6, 5],\n      hasChildren: true,\n    },\n  ]\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artSammlungenFolder',\n      id: `art${url[1]}SammlungenFolder`,\n      label: 'Sammlungen',\n      url: ['Arten', url[1], 'Sammlungen'],\n      sort: [1, artIndex, 2],\n      hasChildren: true,\n    },\n  ]\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artKulturenFolder',\n      id: `art${url[1]}KulturFolder`,\n      label: 'Kulturen',\n      url: ['Arten', url[1], 'Kulturen'],\n      sort: [1, artIndex, 1],\n      hasChildren: true,\n    },\n  ]\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const werte = get(data, 'hasura.zaehleinheit_werte', [])\n\n  return werte\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'zaehleinheit_werte',\n      filterTable: 'zaehleinheit_werte',\n      id: `zaehleinheit${el.id}`,\n      parentId: 'zaehleinheitenFolder',\n      label: get(el, 'wert', '(kein Wert)'),\n      url: ['Werte-Listen', 'Zaehleinheiten', el.id],\n      hasChildren: false,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [6, 2, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const werte = get(data, 'hasura.lieferung_status_werte', [])\n\n  return werte\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'lieferung_status_werte',\n      filterTable: 'lieferung_status_werte',\n      id: `lieferungStatus${el.id}`,\n      parentId: 'lieferungStatusFolder',\n      label: get(el, 'wert', '(kein Wert)'),\n      url: ['Werte-Listen', 'Lieferung-Status', el.id],\n      hasChildren: false,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [6, 4, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const werte = get(data, 'hasura.lieferung_typ_werte', [])\n\n  return werte\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'lieferung_typ_werte',\n      filterTable: 'lieferung_typ_werte',\n      id: `lieferungTyp${el.id}`,\n      parentId: 'lieferungTypFolder',\n      label: get(el, 'wert', '(kein Wert)'),\n      url: ['Werte-Listen', 'Lieferung-Typ', el.id],\n      hasChildren: false,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [6, 3, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const werte = get(data, 'hasura.lieferung_zwischenlager_werte', [])\n\n  return werte\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'lieferung_zwischenlager_werte',\n      filterTable: 'lieferung_zwischenlager_werte',\n      id: `lieferungZwischenlager${el.id}`,\n      parentId: 'lieferungZwischenlagerFolder',\n      label: get(el, 'wert', '(kein Wert)'),\n      url: ['Werte-Listen', 'Lieferung-Zwischenlager', el.id],\n      hasChildren: false,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [6, 5, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\n\nimport compareLabel from '../compareLabel'\nimport allParentNodesExist from '../../allParentNodesExist'\n\nexport default ({ nodes, data }) => {\n  const werte = get(data, 'hasura.masseinheit_werte', [])\n\n  return werte\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'masseinheit_werte',\n      filterTable: 'masseinheit_werte',\n      id: `masseinheit${el.id}`,\n      parentId: 'masseinheitenFolder',\n      label: get(el, 'wert', '(kein Wert)'),\n      url: ['Werte-Listen', 'Masseinheiten', el.id],\n      hasChildren: false,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [6, 1, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\nimport findIndex from 'lodash/findIndex'\n\nimport compareLabel from '../../compareLabel'\nimport allParentNodesExist from '../../../allParentNodesExist'\n\nexport default ({ nodes, data, url }) => {\n  const arten = get(data, 'hasura.ae_art', [])\n  const art = arten.find(a => a.id === url[1])\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`) || 0\n\n  return kulturen\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'kultur',\n      filterTable: 'kultur',\n      id: `kultur${el.id}`,\n      parentId: `art${url[1]}KulturFolder`,\n      label: get(el, 'gartenBygartenId.personBypersonId.name', '(kein Name)'),\n      url: ['Arten', url[1], 'Kulturen', el.id],\n      hasChildren: true,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [1, artIndex, 1, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\nimport findIndex from 'lodash/findIndex'\n\nimport compareLabel from '../../compareLabel'\nimport allParentNodesExist from '../../../allParentNodesExist'\n\nexport default ({ nodes, data, url }) => {\n  const arten = get(data, 'hasura.ae_art', [])\n  const art = arten.find(a => a.id === url[1])\n  const sammlungen = get(art, 'ae_art_art.sammlungsByartId', [])\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${url[1]}`) || 0\n\n  return sammlungen\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'sammlung',\n      filterTable: 'sammlung',\n      id: `sammlung${el.id}`,\n      parentId: `art${url[1]}SammlungenFolder`,\n      label: `${get(el, 'datum', '(kein Datum)')}: ${get(\n        el,\n        'herkunftByherkunftId.nr',\n        '(keine Nr.)',\n      )}`,\n      url: ['Arten', url[1], 'Sammlungen', el.id],\n      hasChildren: true,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [1, artIndex, 2, index]\n      return el\n    })\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artKulturZaehlungFolder',\n      id: `kultur${kulturId}ZaehlungFolder`,\n      label: 'Zählungen',\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Zaehlungen'],\n      sort: [1, artIndex, 1, kulturIndex, 1],\n      hasChildren: true,\n    },\n  ]\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artKulturAbLieferungFolder',\n      id: `kultur${kulturId}AbLieferungFolder`,\n      label: 'Ab-Lieferungen',\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Ab-Lieferungen'],\n      sort: [1, artIndex, 1, kulturIndex, 3],\n      hasChildren: true,\n    },\n  ]\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artKulturZuLieferungFolder',\n      id: `kultur${kulturId}ZuLieferungFolder`,\n      label: 'Zu-Lieferungen',\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Zu-Lieferungen'],\n      sort: [1, artIndex, 1, kulturIndex, 2],\n      hasChildren: true,\n    },\n  ]\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artKulturEventFolder',\n      id: `kultur${kulturId}EventFolder`,\n      label: 'Events',\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Events'],\n      sort: [1, artIndex, 1, kulturIndex, 4],\n      hasChildren: true,\n    },\n  ]\n}\n","import findIndex from 'lodash/findIndex'\n\nexport default ({ url, nodes }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return [\n    {\n      nodeType: 'folder',\n      menuType: 'artKulturInventarFolder',\n      id: `kultur${kulturId}InventarFolder`,\n      label: 'Inventare',\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Inventare'],\n      sort: [1, artIndex, 1, kulturIndex, 5],\n      hasChildren: true,\n    },\n  ]\n}\n","import get from 'lodash/get'\nimport findIndex from 'lodash/findIndex'\n\nimport compareLabel from '../../../compareLabel'\nimport allParentNodesExist from '../../../../allParentNodesExist'\n\nexport default ({ nodes, data, url }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const arten = get(data, 'hasura.ae_art', [])\n  const art = arten.find(a => a.id === artId)\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\n  const kultur = kulturen.find(k => k.id === kulturId)\n  const zaehlungen = get(kultur, 'zaehlungsBykulturId', [])\n\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return zaehlungen\n    .map(el => ({\n      nodeType: 'table',\n      menuType: 'zaehlung',\n      filterTable: 'zaehlung',\n      id: `zaehlung${el.id}`,\n      parentId: `kultur${kulturId}ZaehlungFolder`,\n      label: get(el, 'datum', '(kein Datum)'),\n      url: ['Arten', artId, 'Kulturen', kulturId, 'Zaehlungen', el.id],\n      hasChildren: false,\n    }))\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [1, artIndex, 1, kulturIndex, 1, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\nimport findIndex from 'lodash/findIndex'\n\nimport compareLabel from '../../../compareLabel'\nimport allParentNodesExist from '../../../../allParentNodesExist'\n\nexport default ({ nodes, data, url }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const arten = get(data, 'hasura.ae_art', [])\n  const art = arten.find(a => a.id === artId)\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\n  const kultur = kulturen.find(k => k.id === kulturId)\n  const ablieferungen = get(kultur, 'lieferungsByvonKulturId', [])\n\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return ablieferungen\n    .map(el => {\n      const label = `${get(el, 'von_datum', '(kein von-Datum)')}: ${get(\n        el,\n        'personBypersonId.name',\n        '(kein Name)',\n      )}; ${get(el, 'lieferungTypWerteBytyp.wert', '(kein Typ)')}; ${get(\n        el,\n        'lieferungStatusWerteBystatus.wert',\n        '(kein Status)',\n      )}`\n\n      return {\n        nodeType: 'table',\n        menuType: 'ablieferung',\n        filterTable: 'lieferung',\n        id: `lieferung${el.id}`,\n        parentId: `kultur${kulturId}AbLieferungFolder`,\n        label,\n        url: ['Arten', artId, 'Kulturen', kulturId, 'Lieferungen', el.id],\n        hasChildren: false,\n      }\n    })\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [1, artIndex, 1, kulturIndex, 3, index]\n      return el\n    })\n}\n","import get from 'lodash/get'\nimport findIndex from 'lodash/findIndex'\n\nimport compareLabel from '../../../compareLabel'\nimport allParentNodesExist from '../../../../allParentNodesExist'\n\nexport default ({ nodes, data, url }) => {\n  const artId = url[1]\n  const kulturId = url[3]\n  const arten = get(data, 'hasura.ae_art', [])\n  const art = arten.find(a => a.id === artId)\n  const kulturen = get(art, 'ae_art_art.kultursByartId', [])\n  const kultur = kulturen.find(k => k.id === kulturId)\n  const zulieferungen = get(kultur, 'lieferungsBynachKulturId', [])\n\n  const artNodes = nodes.filter(n => n.parentId === 'artFolder')\n  const artIndex = findIndex(artNodes, n => n.id === `art${artId}`)\n  const kulturNodes = nodes.filter(\n    n => n.parentId === `art${artId}KulturFolder`,\n  )\n  const kulturIndex = findIndex(kulturNodes, n => n.id === `kultur${kulturId}`)\n\n  return zulieferungen\n    .map(el => {\n      const label = `${get(el, 'nach_datum', '(kein nach-Datum)')}: ${get(\n        el,\n        'personBypersonId.name',\n        '(kein Name)',\n      )}; ${get(el, 'lieferungTypWerteBytyp.wert', '(kein Typ)')}; ${get(\n        el,\n        'lieferungStatusWerteBystatus.wert',\n        '(kein Status)',\n      )}`\n\n      return {\n        nodeType: 'table',\n        menuType: 'zulieferung',\n        filterTable: 'lieferung',\n        id: `lieferung${el.id}`,\n        parentId: `kultur${kulturId}ZuLieferungFolder`,\n        label,\n        url: ['Arten', artId, 'Kulturen', kulturId, 'Zu-Lieferungen', el.id],\n        hasChildren: false,\n      }\n    })\n    .filter(n => allParentNodesExist(nodes, n))\n    .sort(compareLabel)\n    .map((el, index) => {\n      el.sort = [1, artIndex, 1, kulturIndex, 2, index]\n      return el\n    })\n}\n","import React, { useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { observer } from 'mobx-react-lite'\nimport findIndex from 'lodash/findIndex'\nimport isEqual from 'lodash/isEqual'\nimport { FixedSizeList as List } from 'react-window'\n\nimport ErrorBoundary from '../ErrorBoundary'\nimport storeContext from '../../storeContext'\nimport Row from './Row'\nimport buildNodes from './nodes'\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  border-right-color: rgb(46, 125, 50);\n  border-right-width: 1px;\n  border-right-style: solid;\n  border-left-color: rgb(46, 125, 50);\n  border-left-width: 1px;\n  border-left-style: solid;\n  overflow: hidden;\n  @media print {\n    display: none !important;\n  }\n`\nconst StyledList = styled(List)`\n  overflow-x: hidden !important;\n`\n\nconst singleRowHeight = 23\n\nconst Tree = ({ data, dimensions }) => {\n  const store = useContext(storeContext)\n  const { activeNodeArray /*, setNodes*/ } = store.tree\n  // 1. build list depending on path using react-window\n  // 2. every node uses navigate to set url on click\n\n  const nodes = buildNodes({ store, data })\n  //setNodes(nodes)\n\n  const listRef = React.createRef()\n\n  useEffect(() => {\n    const index = findIndex(nodes, node => isEqual(node.url, activeNodeArray))\n    listRef.current.scrollToItem(index)\n  }, [activeNodeArray, nodes])\n\n  let height = 250\n  if (dimensions && dimensions.height && !isNaN(dimensions.height)) {\n    height = dimensions.height\n  }\n  let width = 250\n  if (dimensions && dimensions.width && !isNaN(dimensions.width)) {\n    width = dimensions.width\n  }\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        <StyledList\n          height={height}\n          itemCount={nodes.length}\n          itemSize={singleRowHeight}\n          width={width}\n          ref={listRef}\n        >\n          {({ index, style }) => (\n            <Row key={index} style={style} index={index} node={nodes[index]} />\n          )}\n        </StyledList>\n      </Container>\n    </ErrorBoundary>\n  )\n}\n\nexport default observer(Tree)\n","import React, { useEffect, useContext } from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex'\nimport { observer } from 'mobx-react-lite'\n\nconst Container = styled.div`\n  margin-top: 64px;\n  min-height: calc(100vh - 64px);\n`\nconst StyledReflexContainer = styled(ReflexContainer)`\n  height: calc(100vh - 64px) !important;\n`\n\nimport ErrorBoundary from '../../components/ErrorBoundary'\nimport Layout from '../../components/Layout'\nimport Tree from '../../components/Tree'\nimport storeContext from '../../storeContext'\n\nconst Vermehrung = ({ data, location }) => {\n  const store = useContext(storeContext)\n  const { setActiveNodeArray } = store.tree\n\n  // fetch path\n  const { pathname } = location\n  const path = pathname.split('/').filter(v => !!v && v !== 0)\n  // on path change update activeNodeArray\n  useEffect(() => {\n    setActiveNodeArray(path)\n  }, [path])\n\n  return (\n    <ErrorBoundary>\n      <Layout>\n        <Container>\n          <StyledReflexContainer orientation=\"vertical\">\n            <ReflexElement\n              flex={0.3}\n              propagateDimensions={true}\n              renderOnResizeRate={200}\n              renderOnResize={true}\n            >\n              <Tree data={data} />\n            </ReflexElement>\n            <ReflexSplitter />\n            <ReflexElement\n              propagateDimensions={true}\n              renderOnResizeRate={200}\n              renderOnResize={true}\n            >\n              <p>Form</p>\n            </ReflexElement>\n          </StyledReflexContainer>\n        </Container>\n      </Layout>\n    </ErrorBoundary>\n  )\n}\n\nexport default observer(Vermehrung)\n\n// TODO\n// pass parameters according to activeNodeArray\n// to filter only needed parts of the data\nexport const query = graphql`\n  query TreeQuery {\n    hasura {\n      garten {\n        id\n        personBypersonId {\n          id\n          name\n        }\n        kultursBygartenId {\n          id\n          gartenBygartenId {\n            id\n            personBypersonId {\n              id\n              name\n            }\n          }\n          kulturEventsBykulturId {\n            id\n            datum\n            event\n          }\n          kulturInventarsBykulturId {\n            id\n            datum\n            kasten\n            beet\n            nr\n          }\n          zaehlungsBykulturId {\n            id\n            datum\n          }\n          sammlungInKultursBykulturId {\n            id\n            sammlungBysammlungId {\n              id\n              herkunftByherkunftId {\n                id\n                nr\n              }\n              lieferungsByvonSammlungId {\n                id\n                personBypersonId {\n                  id\n                  name\n                }\n                lieferungTypWerteBytyp {\n                  id\n                  wert\n                }\n                lieferungStatusWerteBystatus {\n                  id\n                  wert\n                }\n                von_datum\n                kulturBynachKulturId {\n                  id\n                  gartenBygartenId {\n                    id\n                    personBypersonId {\n                      id\n                      name\n                    }\n                  }\n                  kulturEventsBykulturId {\n                    id\n                    datum\n                    event\n                  }\n                  kulturInventarsBykulturId {\n                    id\n                    datum\n                    kasten\n                    beet\n                    nr\n                  }\n                  zaehlungsBykulturId {\n                    id\n                    datum\n                  }\n                }\n                nach_ausgepflanzt\n              }\n            }\n          }\n        }\n      }\n      ae_art(where: { ae_art_art: { id: { _is_null: false } } }) {\n        id\n        name\n        ae_art_art {\n          id\n          ae_id\n          kultursByartId {\n            id\n            gartenBygartenId {\n              id\n              personBypersonId {\n                id\n                name\n              }\n            }\n            kulturEventsBykulturId {\n              id\n              datum\n              event\n            }\n            kulturInventarsBykulturId {\n              id\n              datum\n              kasten\n              beet\n              nr\n            }\n            zaehlungsBykulturId {\n              id\n              datum\n            }\n            lieferungsByvonKulturId {\n              id\n              personBypersonId {\n                id\n                name\n              }\n              lieferungTypWerteBytyp {\n                id\n                wert\n              }\n              lieferungStatusWerteBystatus {\n                id\n                wert\n              }\n              von_datum\n            }\n            lieferungsBynachKulturId {\n              id\n              personBypersonId {\n                id\n                name\n              }\n              lieferungTypWerteBytyp {\n                id\n                wert\n              }\n              lieferungStatusWerteBystatus {\n                id\n                wert\n              }\n              nach_datum\n            }\n            sammlungInKultursBykulturId {\n              id\n              sammlungBysammlungId {\n                id\n                herkunftByherkunftId {\n                  id\n                  nr\n                }\n                lieferungsByvonSammlungId {\n                  id\n                  personBypersonId {\n                    id\n                    name\n                  }\n                  lieferungTypWerteBytyp {\n                    id\n                    wert\n                  }\n                  lieferungStatusWerteBystatus {\n                    id\n                    wert\n                  }\n                  von_datum\n                  kulturBynachKulturId {\n                    id\n                    gartenBygartenId {\n                      id\n                      personBypersonId {\n                        id\n                        name\n                      }\n                    }\n                    kulturEventsBykulturId {\n                      id\n                      datum\n                      event\n                    }\n                    kulturInventarsBykulturId {\n                      id\n                      datum\n                      kasten\n                      beet\n                      nr\n                    }\n                    zaehlungsBykulturId {\n                      id\n                      datum\n                    }\n                  }\n                  nach_ausgepflanzt\n                }\n              }\n            }\n          }\n          sammlungsByartId {\n            id\n            art_id\n            herkunftByherkunftId {\n              id\n              nr\n            }\n            artByartId {\n              id\n              art_ae_art {\n                id\n                name\n              }\n            }\n            datum\n            sammlungInKultursBysammlungId {\n              id\n              kulturBykulturId {\n                id\n                gartenBygartenId {\n                  id\n                  personBypersonId {\n                    id\n                    name\n                  }\n                }\n              }\n            }\n            lieferungsByvonSammlungId {\n              id\n              personBypersonId {\n                id\n                name\n              }\n              lieferungTypWerteBytyp {\n                id\n                wert\n              }\n              lieferungStatusWerteBystatus {\n                id\n                wert\n              }\n              von_datum\n              kulturBynachKulturId {\n                id\n                gartenBygartenId {\n                  id\n                  personBypersonId {\n                    id\n                    name\n                  }\n                }\n                kulturEventsBykulturId {\n                  id\n                  datum\n                  event\n                }\n                kulturInventarsBykulturId {\n                  id\n                  datum\n                  kasten\n                  beet\n                  nr\n                }\n                zaehlungsBykulturId {\n                  id\n                  datum\n                }\n              }\n              nach_ausgepflanzt\n            }\n          }\n        }\n      }\n      herkunft {\n        id\n        lokalname\n        sammlungsByherkunftId {\n          id\n          art_id\n          artByartId {\n            id\n            art_ae_art {\n              id\n              name\n            }\n          }\n          datum\n          sammlungInKultursBysammlungId {\n            id\n            kulturBykulturId {\n              id\n              gartenBygartenId {\n                id\n                personBypersonId {\n                  id\n                  name\n                }\n              }\n            }\n          }\n          lieferungsByvonSammlungId {\n            id\n            personBypersonId {\n              id\n              name\n            }\n            lieferungTypWerteBytyp {\n              id\n              wert\n            }\n            lieferungStatusWerteBystatus {\n              id\n              wert\n            }\n            von_datum\n            kulturBynachKulturId {\n              id\n              gartenBygartenId {\n                id\n                personBypersonId {\n                  id\n                  name\n                }\n              }\n              kulturEventsBykulturId {\n                id\n                datum\n                event\n              }\n              kulturInventarsBykulturId {\n                id\n                datum\n                kasten\n                beet\n                nr\n              }\n              zaehlungsBykulturId {\n                id\n                datum\n              }\n            }\n            nach_ausgepflanzt\n          }\n        }\n      }\n      lieferung {\n        id\n        personBypersonId {\n          id\n          name\n        }\n        lieferungTypWerteBytyp {\n          id\n          wert\n        }\n        lieferungStatusWerteBystatus {\n          id\n          wert\n        }\n        von_datum\n        kulturBynachKulturId {\n          id\n          gartenBygartenId {\n            id\n            personBypersonId {\n              id\n              name\n            }\n          }\n          kulturEventsBykulturId {\n            id\n            datum\n            event\n          }\n          kulturInventarsBykulturId {\n            id\n            datum\n            kasten\n            beet\n            nr\n          }\n          zaehlungsBykulturId {\n            id\n            datum\n          }\n        }\n        nach_ausgepflanzt\n      }\n      person {\n        id\n        name\n        gartensBypersonId {\n          id\n        }\n        sammlungsBypersonId {\n          id\n          artByartId {\n            id\n            art_ae_art {\n              id\n              name\n            }\n          }\n          herkunftByherkunftId {\n            id\n            nr\n          }\n        }\n        lieferungsBypersonId {\n          id\n          personBypersonId {\n            id\n            name\n          }\n          lieferungTypWerteBytyp {\n            id\n            wert\n          }\n          lieferungStatusWerteBystatus {\n            id\n            wert\n          }\n          von_datum\n          kulturBynachKulturId {\n            id\n            artByartId {\n              id\n              art_ae_art {\n                id\n                name\n              }\n            }\n            gartenBygartenId {\n              id\n              personBypersonId {\n                id\n                name\n              }\n            }\n          }\n          nach_ausgepflanzt\n        }\n      }\n      masseinheit_werte {\n        id\n        wert\n        sort\n      }\n      zaehleinheit_werte {\n        id\n        wert\n        sort\n      }\n      lieferung_zwischenlager_werte {\n        id\n        wert\n        sort\n      }\n      lieferung_status_werte {\n        id\n        wert\n        sort\n      }\n      lieferung_typ_werte {\n        id\n        wert\n        sort\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\n\nconst Container = styled.div`\n  margin: 10px;\n`\nconst ErrorTitle = styled.div`\n  margin-bottom: 10px;\n`\nconst ReloadButton = styled(Button)`\n  margin-top: 10px !important;\n`\n\nclass ErrorBoundary extends Component {\n  static getDerivedStateFromError(error) {\n    // Catch errors in any components below and re-render with error message\n    return {\n      error,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  render() {\n    const { error } = this.state\n    if (error) {\n      console.log('error:', error)\n      return (\n        <Container>\n          <ErrorTitle>\n            Oh je, es ist ein Fehler aufgetreten! Bericht:\n          </ErrorTitle>\n          <div>{error.message}</div>\n          <ReloadButton\n            variant=\"outlined\"\n            onClick={() => {\n              typeof window !== 'undefined' && window.location.reload(false)\n            }}\n          >\n            Neu laden\n          </ReloadButton>\n        </Container>\n      )\n    }\n    const { children } = this.props\n    var childrenWithProps = React.Children.map(children, child =>\n      React.cloneElement(child, { ...this.props }),\n    )\n\n    // Normally, just render children\n    // and pass all props\n    return childrenWithProps\n  }\n}\n\nexport default ErrorBoundary\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useCallback, useContext } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport { FaUserCircle as UserIcon } from 'react-icons/fa'\nimport styled from 'styled-components'\nimport { observer } from 'mobx-react-lite'\n\n//import Signup from './Signup'\n//import Login from './Login'\nimport ErrorBoundary from '../ErrorBoundary'\nimport storeContext from '../../storeContext'\n\nconst IconContainer = styled.div`\n  position: relative;\n  padding-left: 10px;\n`\nconst UserNameDiv = styled.div`\n  position: absolute;\n  bottom: 0;\n  font-size: 10px;\n  width: 60px;\n  left: 5px;\n  text-align: center;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  /* ensure cursor is not changed */\n  z-index: -1;\n`\n\nconst Account = () => {\n  const store = useContext(storeContext)\n  const { email /*, signupOpen, loginOpen*/ } = store\n  const [anchorEl, setAnchorEl] = useState(null)\n  const onClickMenu = useCallback(event => setAnchorEl(event.currentTarget), [])\n  const onCloseMenu = useCallback(() => setAnchorEl(null), [])\n  const onClickSignup = useCallback(() => {\n    setAnchorEl(null)\n    console.log('TODO')\n    // authState.setSignupOpen(!signupOpen)\n  }, [])\n  const onClickLogin = useCallback(() => {\n    setAnchorEl(null)\n    console.log('TODO')\n    // authState.setLoginOpen(!loginOpen)\n  }, [])\n  const onClickLogout = useCallback(() => {\n    setAnchorEl(null)\n    console.log('TODO')\n    // authState.logOut()\n  }, [])\n\n  return (\n    <ErrorBoundary>\n      <>\n        <IconContainer>\n          <IconButton\n            aria-haspopup=\"true\"\n            aria-label=\"Konto\"\n            onClick={onClickMenu}\n            color=\"inherit\"\n            title=\"Konto\"\n          >\n            <UserIcon />\n          </IconButton>\n          <UserNameDiv>{email || ''}</UserNameDiv>\n        </IconContainer>\n        <Menu\n          id=\"menu-appbar\"\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={!!anchorEl}\n          onClose={onCloseMenu}\n        >\n          {!email && <MenuItem onClick={onClickLogin}>Anmelden</MenuItem>}\n          {email && <MenuItem onClick={onClickLogout}>Abmelden</MenuItem>}\n          <MenuItem onClick={onClickSignup}>Konto erstellen</MenuItem>\n        </Menu>\n        {/*signupOpen && <Signup />*/}\n        {/*loginOpen && <Login />*/}\n      </>\n    </ErrorBoundary>\n  )\n}\n\nexport default observer(Account)\n","// @flow\nimport React, { useState, useCallback } from 'react'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport styled from 'styled-components'\nimport { observer } from 'mobx-react-lite'\nimport { navigate } from 'gatsby'\n\nimport ErrorBoundary from '../ErrorBoundary'\n\nconst Container = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`\nconst MehrButton = styled(Button)`\n  color: white !important;\n`\n\nconst MyAppBar = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const onClickUserDocs = useCallback(() => {\n    setAnchorEl(null)\n    navigate('/Benutzer-Dokumentation/')\n  })\n  const onClickTechDocs = useCallback(() => {\n    setAnchorEl(null)\n    navigate('/Technische-Dokumentation/')\n  })\n  const onClickKontakt = useCallback(() => {\n    setAnchorEl(null)\n    window.open('https://gabriel-software.ch/Kontakt')\n  })\n  const onClickMehrButton = useCallback(event =>\n    setAnchorEl(event.currentTarget),\n  )\n  const onClose = useCallback(() => setAnchorEl(null))\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        <MehrButton\n          aria-label=\"Mehr\"\n          aria-owns={anchorEl ? 'long-menu' : null}\n          aria-haspopup=\"true\"\n          onClick={onClickMehrButton}\n        >\n          Mehr\n        </MehrButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={onClose}\n        >\n          <MenuItem onClick={onClickUserDocs}>Benutzer-Dokumentation</MenuItem>\n          <MenuItem onClick={onClickTechDocs}>\n            Technische Dokumentation\n          </MenuItem>\n          <MenuItem onClick={onClickKontakt}>Kontakt</MenuItem>\n        </Menu>\n      </Container>\n    </ErrorBoundary>\n  )\n}\n\nexport default observer(MyAppBar)\n","import React, { useCallback } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport styled from 'styled-components'\nimport { Link, navigate } from 'gatsby'\nimport { Location } from '@reach/router'\n\nimport Account from './Account'\nimport More from './More'\nimport ErrorBoundary from '../ErrorBoundary'\n\nconst SiteTitle = styled(Typography)`\n  display: none;\n  cursor: pointer;\n  @media (min-width: 700px) {\n    display: block;\n  }\n`\nconst Spacer = styled.div`\n  flex-grow: 1;\n`\n\nconst NavButton = styled(Button)`\n  color: white !important;\n  border-color: rgba(255, 255, 255, 0.5) !important;\n  font-weight: ${props => (props.active ? '700' : '500')};\n`\n\nconst Header = () => {\n  const onClickSiteTitle = useCallback(() => navigate('/'))\n\n  return (\n    <Location>\n      {({ location }) => {\n        const { pathname } = location\n\n        return (\n          <ErrorBoundary>\n            <AppBar position=\"fixed\">\n              <Toolbar>\n                <SiteTitle\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  noWrap\n                  title=\"Home\"\n                  onClick={onClickSiteTitle}\n                >\n                  Vermehrung\n                </SiteTitle>\n                <Spacer />\n                {!pathname.startsWith('/Vermehrung') && (\n                  <NavButton\n                    variant=\"text\"\n                    component={Link}\n                    to=\"/Vermehrung/\"\n                    active={pathname === '/Vermehrung/' ? 1 : 0}\n                  >\n                    Zu den Daten\n                  </NavButton>\n                )}\n                <Account />\n                <More />\n              </Toolbar>\n            </AppBar>\n          </ErrorBoundary>\n        )\n      }}\n    </Location>\n  )\n}\n\nexport default Header\n","/**\n * Cant move Helmet to App\n * because neither StaticQuery nor AppQuery\n * work there :-(\n */\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './Header'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={query}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Bedrohte Pflanzenarten vermehren',\n            },\n            {\n              name: 'keywords',\n              content: 'Naturschutz, Artenschutz, Flora, Pflanzen, Vermehrung',\n            },\n          ]}\n        >\n          <html lang=\"de\" />\n        </Helmet>\n        <Header />\n        {children}\n      </>\n    )}\n  />\n)\n\nexport default Layout\n"],"sourceRoot":""}